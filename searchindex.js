Search.setIndex({"docnames": ["about/changelog", "about/contributing", "about/contributors", "about/license", "dev/contributing", "dev/dev_install", "glossary", "index", "reference/autoplex.auto", "reference/autoplex.auto.phonons", "reference/autoplex.auto.phonons.flows", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow", "reference/autoplex.auto.phonons.flows.DFTSupercellSettingsMaker", "reference/autoplex.auto.phonons.flows.TYPE_CHECKING", "reference/autoplex.auto.phonons.jobs", "reference/autoplex.auto.phonons.jobs.TYPE_CHECKING", "reference/autoplex.auto.phonons.jobs.complete_benchmark", "reference/autoplex.auto.phonons.jobs.dft_phonopy_gen_data", "reference/autoplex.auto.phonons.jobs.dft_random_gen_data", "reference/autoplex.auto.phonons.jobs.generate_supercells", "reference/autoplex.auto.phonons.jobs.get_iso_atom", "reference/autoplex.auto.phonons.jobs.run_supercells", "reference/autoplex.auto.rss", "reference/autoplex.benchmark", "reference/autoplex.benchmark.phonons", "reference/autoplex.benchmark.phonons.flows", "reference/autoplex.benchmark.phonons.flows.PhononBenchmarkMaker", "reference/autoplex.benchmark.phonons.flows.TYPE_CHECKING", "reference/autoplex.benchmark.phonons.jobs", "reference/autoplex.benchmark.phonons.jobs.write_benchmark_metrics", "reference/autoplex.benchmark.phonons.utils", "reference/autoplex.benchmark.phonons.utils.TYPE_CHECKING", "reference/autoplex.benchmark.phonons.utils.compare_plot", "reference/autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics", "reference/autoplex.benchmark.phonons.utils.get_rmse", "reference/autoplex.benchmark.phonons.utils.rmse_qdep_plot", "reference/autoplex.benchmark.rss", "reference/autoplex.data", "reference/autoplex.data.common", "reference/autoplex.data.common.flows", "reference/autoplex.data.common.flows.DFTStaticMaker", "reference/autoplex.data.common.flows.GenerateTrainingDataForTesting", "reference/autoplex.data.common.flows.TYPE_CHECKING", "reference/autoplex.data.common.jobs", "reference/autoplex.data.common.jobs.Data_preprocessing", "reference/autoplex.data.common.jobs.TYPE_CHECKING", "reference/autoplex.data.common.jobs.VASP_collect_data", "reference/autoplex.data.common.jobs.check_convergence_vasp", "reference/autoplex.data.common.jobs.convert_to_extxyz", "reference/autoplex.data.common.jobs.generate_randomized_structures", "reference/autoplex.data.common.jobs.get_supercell_job", "reference/autoplex.data.common.jobs.plot_force_distribution", "reference/autoplex.data.common.jobs.safe_strip_hostname", "reference/autoplex.data.common.jobs.sampling", "reference/autoplex.data.common.utils", "reference/autoplex.data.common.utils.ElementCollection", "reference/autoplex.data.common.utils.GPa", "reference/autoplex.data.common.utils.TYPE_CHECKING", "reference/autoplex.data.common.utils.boltz", "reference/autoplex.data.common.utils.boltzhist_cur", "reference/autoplex.data.common.utils.check_distances", "reference/autoplex.data.common.utils.convexhull_cur", "reference/autoplex.data.common.utils.create_soap_descriptor", "reference/autoplex.data.common.utils.cur_select", "reference/autoplex.data.common.utils.data_distillation", "reference/autoplex.data.common.utils.energy_plot", "reference/autoplex.data.common.utils.extract_base_name", "reference/autoplex.data.common.utils.filter_outlier_energy", "reference/autoplex.data.common.utils.filter_outlier_forces", "reference/autoplex.data.common.utils.flatten", "reference/autoplex.data.common.utils.force_plot", "reference/autoplex.data.common.utils.mc_rattle", "reference/autoplex.data.common.utils.parallel_calc_descriptor_vec", "reference/autoplex.data.common.utils.plot_energy_forces", "reference/autoplex.data.common.utils.random_vary_angle", "reference/autoplex.data.common.utils.rms_dict", "reference/autoplex.data.common.utils.scale_cell", "reference/autoplex.data.common.utils.std_rattle", "reference/autoplex.data.common.utils.stratified_dataset_split", "reference/autoplex.data.common.utils.to_ase_trajectory", "reference/autoplex.data.phonons", "reference/autoplex.data.phonons.flows", "reference/autoplex.data.phonons.flows.DFTPhononMaker", "reference/autoplex.data.phonons.flows.IsoAtomMaker", "reference/autoplex.data.phonons.flows.IsoAtomStaticMaker", "reference/autoplex.data.phonons.flows.MLPhononMaker", "reference/autoplex.data.phonons.flows.RandomStructuresDataGenerator", "reference/autoplex.data.phonons.flows.TYPE_CHECKING", "reference/autoplex.data.phonons.flows.TightDFTStaticMaker", "reference/autoplex.data.phonons.jobs", "reference/autoplex.data.phonons.jobs.TYPE_CHECKING", "reference/autoplex.data.phonons.jobs.reduce_supercell_size_job", "reference/autoplex.data.phonons.utils", "reference/autoplex.data.phonons.utils.TYPE_CHECKING", "reference/autoplex.data.phonons.utils.check_supercells", "reference/autoplex.data.phonons.utils.ml_phonon_maker_preparation", "reference/autoplex.data.phonons.utils.reduce_supercell_size", "reference/autoplex.data.phonons.utils.update_phonon_displacement_maker", "reference/autoplex.data.rss", "reference/autoplex.data.rss.flows", "reference/autoplex.data.rss.flows.do_rss_iterations", "reference/autoplex.data.rss.flows.initial_rss", "reference/autoplex.data.rss.jobs", "reference/autoplex.data.rss.jobs.RandomizedStructure", "reference/autoplex.data.rss.jobs.TYPE_CHECKING", "reference/autoplex.data.rss.jobs.atomic_numbers", "reference/autoplex.data.rss.jobs.covalent_radii", "reference/autoplex.data.rss.jobs.do_rss", "reference/autoplex.data.rss.utils", "reference/autoplex.data.rss.utils.GPa", "reference/autoplex.data.rss.utils.HookeanRepulsion", "reference/autoplex.data.rss.utils.atomic_numbers", "reference/autoplex.data.rss.utils.chemical_symbols", "reference/autoplex.data.rss.utils.extract_pairstyle", "reference/autoplex.data.rss.utils.minimize_structures", "reference/autoplex.data.rss.utils.myPotential", "reference/autoplex.data.rss.utils.process_rss", "reference/autoplex.fitting", "reference/autoplex.fitting.common", "reference/autoplex.fitting.common.flows", "reference/autoplex.fitting.common.flows.DataPreprocessing", "reference/autoplex.fitting.common.flows.MLIPFitMaker", "reference/autoplex.fitting.common.jobs", "reference/autoplex.fitting.common.jobs.machine_learning_fit", "reference/autoplex.fitting.common.regularization", "reference/autoplex.fitting.common.regularization.TYPE_CHECKING", "reference/autoplex.fitting.common.regularization.calculate_hull_3D", "reference/autoplex.fitting.common.regularization.calculate_hull_ND", "reference/autoplex.fitting.common.regularization.get_convex_hull", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull_3D", "reference/autoplex.fitting.common.regularization.get_intersect", "reference/autoplex.fitting.common.regularization.get_mole_frac", "reference/autoplex.fitting.common.regularization.label_stoichiometry_volume", "reference/autoplex.fitting.common.regularization.piecewise_linear", "reference/autoplex.fitting.common.regularization.point_in_triangle_2D", "reference/autoplex.fitting.common.regularization.point_in_triangle_ND", "reference/autoplex.fitting.common.regularization.set_sigma", "reference/autoplex.fitting.common.utils", "reference/autoplex.fitting.common.utils.TYPE_CHECKING", "reference/autoplex.fitting.common.utils.calculate_delta", "reference/autoplex.fitting.common.utils.check_convergence", "reference/autoplex.fitting.common.utils.chemical_symbols", "reference/autoplex.fitting.common.utils.compute_pairs_triplets", "reference/autoplex.fitting.common.utils.convert_xyz_to_structure", "reference/autoplex.fitting.common.utils.energy_remain", "reference/autoplex.fitting.common.utils.extract_gap_label", "reference/autoplex.fitting.common.utils.flatten", "reference/autoplex.fitting.common.utils.gap_fitting", "reference/autoplex.fitting.common.utils.gap_hyperparameter_constructor", "reference/autoplex.fitting.common.utils.gcm3_to_Vm", "reference/autoplex.fitting.common.utils.get_atomic_numbers", "reference/autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs", "reference/autoplex.fitting.common.utils.jace_fitting", "reference/autoplex.fitting.common.utils.load_mlip_hyperparameter_defaults", "reference/autoplex.fitting.common.utils.m3gnet_fitting", "reference/autoplex.fitting.common.utils.mace_fitting", "reference/autoplex.fitting.common.utils.mace_virial_format_conversion", "reference/autoplex.fitting.common.utils.nequip_fitting", "reference/autoplex.fitting.common.utils.plot_convex_hull", "reference/autoplex.fitting.common.utils.prepare_fit_environment", "reference/autoplex.fitting.common.utils.run_ace", "reference/autoplex.fitting.common.utils.run_gap", "reference/autoplex.fitting.common.utils.run_mace", "reference/autoplex.fitting.common.utils.run_nequip", "reference/autoplex.fitting.common.utils.run_quip", "reference/autoplex.fitting.common.utils.vaspoutput_2_extended_xyz", "reference/autoplex.fitting.common.utils.write_after_distillation_data_split", "reference/autoplex.fitting.phonons", "reference/autoplex.fitting.phonons.flows", "reference/autoplex.fitting.phonons.jobs", "reference/autoplex.fitting.rss", "reference/autoplex.fitting.rss.flows", "reference/autoplex.fitting.rss.jobs", "reference/index", "user/benchmark/benchmark", "user/fitting/fitting", "user/flows/flows", "user/generation/data", "user/index", "user/jobflowremote", "user/setup", "user/tutorials"], "filenames": ["about/changelog.md", "about/contributing.md", "about/contributors.md", "about/license.md", "dev/contributing.md", "dev/dev_install.md", "glossary.rst", "index.md", "reference/autoplex.auto.rst", "reference/autoplex.auto.phonons.rst", "reference/autoplex.auto.phonons.flows.rst", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.rst", "reference/autoplex.auto.phonons.flows.DFTSupercellSettingsMaker.rst", "reference/autoplex.auto.phonons.flows.TYPE_CHECKING.rst", "reference/autoplex.auto.phonons.jobs.rst", "reference/autoplex.auto.phonons.jobs.TYPE_CHECKING.rst", "reference/autoplex.auto.phonons.jobs.complete_benchmark.rst", "reference/autoplex.auto.phonons.jobs.dft_phonopy_gen_data.rst", "reference/autoplex.auto.phonons.jobs.dft_random_gen_data.rst", "reference/autoplex.auto.phonons.jobs.generate_supercells.rst", "reference/autoplex.auto.phonons.jobs.get_iso_atom.rst", "reference/autoplex.auto.phonons.jobs.run_supercells.rst", "reference/autoplex.auto.rss.rst", "reference/autoplex.benchmark.rst", "reference/autoplex.benchmark.phonons.rst", "reference/autoplex.benchmark.phonons.flows.rst", "reference/autoplex.benchmark.phonons.flows.PhononBenchmarkMaker.rst", "reference/autoplex.benchmark.phonons.flows.TYPE_CHECKING.rst", "reference/autoplex.benchmark.phonons.jobs.rst", "reference/autoplex.benchmark.phonons.jobs.write_benchmark_metrics.rst", "reference/autoplex.benchmark.phonons.utils.rst", "reference/autoplex.benchmark.phonons.utils.TYPE_CHECKING.rst", "reference/autoplex.benchmark.phonons.utils.compare_plot.rst", "reference/autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics.rst", "reference/autoplex.benchmark.phonons.utils.get_rmse.rst", "reference/autoplex.benchmark.phonons.utils.rmse_qdep_plot.rst", "reference/autoplex.benchmark.rss.rst", "reference/autoplex.data.rst", "reference/autoplex.data.common.rst", "reference/autoplex.data.common.flows.rst", "reference/autoplex.data.common.flows.DFTStaticMaker.rst", "reference/autoplex.data.common.flows.GenerateTrainingDataForTesting.rst", "reference/autoplex.data.common.flows.TYPE_CHECKING.rst", "reference/autoplex.data.common.jobs.rst", "reference/autoplex.data.common.jobs.Data_preprocessing.rst", "reference/autoplex.data.common.jobs.TYPE_CHECKING.rst", "reference/autoplex.data.common.jobs.VASP_collect_data.rst", "reference/autoplex.data.common.jobs.check_convergence_vasp.rst", "reference/autoplex.data.common.jobs.convert_to_extxyz.rst", "reference/autoplex.data.common.jobs.generate_randomized_structures.rst", "reference/autoplex.data.common.jobs.get_supercell_job.rst", "reference/autoplex.data.common.jobs.plot_force_distribution.rst", "reference/autoplex.data.common.jobs.safe_strip_hostname.rst", "reference/autoplex.data.common.jobs.sampling.rst", "reference/autoplex.data.common.utils.rst", "reference/autoplex.data.common.utils.ElementCollection.rst", "reference/autoplex.data.common.utils.GPa.rst", "reference/autoplex.data.common.utils.TYPE_CHECKING.rst", "reference/autoplex.data.common.utils.boltz.rst", "reference/autoplex.data.common.utils.boltzhist_cur.rst", "reference/autoplex.data.common.utils.check_distances.rst", "reference/autoplex.data.common.utils.convexhull_cur.rst", "reference/autoplex.data.common.utils.create_soap_descriptor.rst", "reference/autoplex.data.common.utils.cur_select.rst", "reference/autoplex.data.common.utils.data_distillation.rst", "reference/autoplex.data.common.utils.energy_plot.rst", "reference/autoplex.data.common.utils.extract_base_name.rst", "reference/autoplex.data.common.utils.filter_outlier_energy.rst", "reference/autoplex.data.common.utils.filter_outlier_forces.rst", "reference/autoplex.data.common.utils.flatten.rst", "reference/autoplex.data.common.utils.force_plot.rst", "reference/autoplex.data.common.utils.mc_rattle.rst", "reference/autoplex.data.common.utils.parallel_calc_descriptor_vec.rst", "reference/autoplex.data.common.utils.plot_energy_forces.rst", "reference/autoplex.data.common.utils.random_vary_angle.rst", "reference/autoplex.data.common.utils.rms_dict.rst", "reference/autoplex.data.common.utils.scale_cell.rst", "reference/autoplex.data.common.utils.std_rattle.rst", "reference/autoplex.data.common.utils.stratified_dataset_split.rst", "reference/autoplex.data.common.utils.to_ase_trajectory.rst", "reference/autoplex.data.phonons.rst", "reference/autoplex.data.phonons.flows.rst", "reference/autoplex.data.phonons.flows.DFTPhononMaker.rst", "reference/autoplex.data.phonons.flows.IsoAtomMaker.rst", "reference/autoplex.data.phonons.flows.IsoAtomStaticMaker.rst", "reference/autoplex.data.phonons.flows.MLPhononMaker.rst", "reference/autoplex.data.phonons.flows.RandomStructuresDataGenerator.rst", "reference/autoplex.data.phonons.flows.TYPE_CHECKING.rst", "reference/autoplex.data.phonons.flows.TightDFTStaticMaker.rst", "reference/autoplex.data.phonons.jobs.rst", "reference/autoplex.data.phonons.jobs.TYPE_CHECKING.rst", "reference/autoplex.data.phonons.jobs.reduce_supercell_size_job.rst", "reference/autoplex.data.phonons.utils.rst", "reference/autoplex.data.phonons.utils.TYPE_CHECKING.rst", "reference/autoplex.data.phonons.utils.check_supercells.rst", "reference/autoplex.data.phonons.utils.ml_phonon_maker_preparation.rst", "reference/autoplex.data.phonons.utils.reduce_supercell_size.rst", "reference/autoplex.data.phonons.utils.update_phonon_displacement_maker.rst", "reference/autoplex.data.rss.rst", "reference/autoplex.data.rss.flows.rst", "reference/autoplex.data.rss.flows.do_rss_iterations.rst", "reference/autoplex.data.rss.flows.initial_rss.rst", "reference/autoplex.data.rss.jobs.rst", "reference/autoplex.data.rss.jobs.RandomizedStructure.rst", "reference/autoplex.data.rss.jobs.TYPE_CHECKING.rst", "reference/autoplex.data.rss.jobs.atomic_numbers.rst", "reference/autoplex.data.rss.jobs.covalent_radii.rst", "reference/autoplex.data.rss.jobs.do_rss.rst", "reference/autoplex.data.rss.utils.rst", "reference/autoplex.data.rss.utils.GPa.rst", "reference/autoplex.data.rss.utils.HookeanRepulsion.rst", "reference/autoplex.data.rss.utils.atomic_numbers.rst", "reference/autoplex.data.rss.utils.chemical_symbols.rst", "reference/autoplex.data.rss.utils.extract_pairstyle.rst", "reference/autoplex.data.rss.utils.minimize_structures.rst", "reference/autoplex.data.rss.utils.myPotential.rst", "reference/autoplex.data.rss.utils.process_rss.rst", "reference/autoplex.fitting.rst", "reference/autoplex.fitting.common.rst", "reference/autoplex.fitting.common.flows.rst", "reference/autoplex.fitting.common.flows.DataPreprocessing.rst", "reference/autoplex.fitting.common.flows.MLIPFitMaker.rst", "reference/autoplex.fitting.common.jobs.rst", "reference/autoplex.fitting.common.jobs.machine_learning_fit.rst", "reference/autoplex.fitting.common.regularization.rst", "reference/autoplex.fitting.common.regularization.TYPE_CHECKING.rst", "reference/autoplex.fitting.common.regularization.calculate_hull_3D.rst", "reference/autoplex.fitting.common.regularization.calculate_hull_ND.rst", "reference/autoplex.fitting.common.regularization.get_convex_hull.rst", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull.rst", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull_3D.rst", "reference/autoplex.fitting.common.regularization.get_intersect.rst", "reference/autoplex.fitting.common.regularization.get_mole_frac.rst", "reference/autoplex.fitting.common.regularization.label_stoichiometry_volume.rst", "reference/autoplex.fitting.common.regularization.piecewise_linear.rst", "reference/autoplex.fitting.common.regularization.point_in_triangle_2D.rst", "reference/autoplex.fitting.common.regularization.point_in_triangle_ND.rst", "reference/autoplex.fitting.common.regularization.set_sigma.rst", "reference/autoplex.fitting.common.utils.rst", "reference/autoplex.fitting.common.utils.TYPE_CHECKING.rst", "reference/autoplex.fitting.common.utils.calculate_delta.rst", "reference/autoplex.fitting.common.utils.check_convergence.rst", "reference/autoplex.fitting.common.utils.chemical_symbols.rst", "reference/autoplex.fitting.common.utils.compute_pairs_triplets.rst", "reference/autoplex.fitting.common.utils.convert_xyz_to_structure.rst", "reference/autoplex.fitting.common.utils.energy_remain.rst", "reference/autoplex.fitting.common.utils.extract_gap_label.rst", "reference/autoplex.fitting.common.utils.flatten.rst", "reference/autoplex.fitting.common.utils.gap_fitting.rst", "reference/autoplex.fitting.common.utils.gap_hyperparameter_constructor.rst", "reference/autoplex.fitting.common.utils.gcm3_to_Vm.rst", "reference/autoplex.fitting.common.utils.get_atomic_numbers.rst", "reference/autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs.rst", "reference/autoplex.fitting.common.utils.jace_fitting.rst", "reference/autoplex.fitting.common.utils.load_mlip_hyperparameter_defaults.rst", "reference/autoplex.fitting.common.utils.m3gnet_fitting.rst", "reference/autoplex.fitting.common.utils.mace_fitting.rst", "reference/autoplex.fitting.common.utils.mace_virial_format_conversion.rst", "reference/autoplex.fitting.common.utils.nequip_fitting.rst", "reference/autoplex.fitting.common.utils.plot_convex_hull.rst", "reference/autoplex.fitting.common.utils.prepare_fit_environment.rst", "reference/autoplex.fitting.common.utils.run_ace.rst", "reference/autoplex.fitting.common.utils.run_gap.rst", "reference/autoplex.fitting.common.utils.run_mace.rst", "reference/autoplex.fitting.common.utils.run_nequip.rst", "reference/autoplex.fitting.common.utils.run_quip.rst", "reference/autoplex.fitting.common.utils.vaspoutput_2_extended_xyz.rst", "reference/autoplex.fitting.common.utils.write_after_distillation_data_split.rst", "reference/autoplex.fitting.phonons.rst", "reference/autoplex.fitting.phonons.flows.rst", "reference/autoplex.fitting.phonons.jobs.rst", "reference/autoplex.fitting.rss.rst", "reference/autoplex.fitting.rss.flows.rst", "reference/autoplex.fitting.rss.jobs.rst", "reference/index.rst", "user/benchmark/benchmark.md", "user/fitting/fitting.md", "user/flows/flows.md", "user/generation/data.md", "user/index.md", "user/jobflowremote.md", "user/setup.md", "user/tutorials.md"], "titles": ["&lt;no title&gt;", "Guidelines for contributions to autoplex", "Contributors", "License", "Guidelines for contributions to autoplex", "Developer Installation", "Glossary", "autoplex documentation", "autoplex.auto", "autoplex.auto.phonons", "autoplex.auto.phonons.flows", "CompleteDFTvsMLBenchmarkWorkflow", "DFTSupercellSettingsMaker", "TYPE_CHECKING", "autoplex.auto.phonons.jobs", "TYPE_CHECKING", "complete_benchmark", "dft_phonopy_gen_data", "dft_random_gen_data", "generate_supercells", "get_iso_atom", "run_supercells", "autoplex.auto.rss", "autoplex.benchmark", "autoplex.benchmark.phonons", "autoplex.benchmark.phonons.flows", "PhononBenchmarkMaker", "TYPE_CHECKING", "autoplex.benchmark.phonons.jobs", "write_benchmark_metrics", "autoplex.benchmark.phonons.utils", "TYPE_CHECKING", "compare_plot", "compute_bandstructure_benchmark_metrics", "get_rmse", "rmse_qdep_plot", "autoplex.benchmark.rss", "autoplex.data", "autoplex.data.common", "autoplex.data.common.flows", "DFTStaticMaker", "GenerateTrainingDataForTesting", "TYPE_CHECKING", "autoplex.data.common.jobs", "Data_preprocessing", "TYPE_CHECKING", "VASP_collect_data", "check_convergence_vasp", "convert_to_extxyz", "generate_randomized_structures", "get_supercell_job", "plot_force_distribution", "safe_strip_hostname", "sampling", "autoplex.data.common.utils", "ElementCollection", "GPa", "TYPE_CHECKING", "boltz", "boltzhist_cur", "check_distances", "convexhull_cur", "create_soap_descriptor", "cur_select", "data_distillation", "energy_plot", "extract_base_name", "filter_outlier_energy", "filter_outlier_forces", "flatten", "force_plot", "mc_rattle", "parallel_calc_descriptor_vec", "plot_energy_forces", "random_vary_angle", "rms_dict", "scale_cell", "std_rattle", "stratified_dataset_split", "to_ase_trajectory", "autoplex.data.phonons", "autoplex.data.phonons.flows", "DFTPhononMaker", "IsoAtomMaker", "IsoAtomStaticMaker", "MLPhononMaker", "RandomStructuresDataGenerator", "TYPE_CHECKING", "TightDFTStaticMaker", "autoplex.data.phonons.jobs", "TYPE_CHECKING", "reduce_supercell_size_job", "autoplex.data.phonons.utils", "TYPE_CHECKING", "check_supercells", "ml_phonon_maker_preparation", "reduce_supercell_size", "update_phonon_displacement_maker", "autoplex.data.rss", "autoplex.data.rss.flows", "do_rss_iterations", "initial_rss", "autoplex.data.rss.jobs", "RandomizedStructure", "TYPE_CHECKING", "atomic_numbers", "covalent_radii", "do_rss", "autoplex.data.rss.utils", "GPa", "HookeanRepulsion", "atomic_numbers", "chemical_symbols", "extract_pairstyle", "minimize_structures", "myPotential", "process_rss", "autoplex.fitting", "autoplex.fitting.common", "autoplex.fitting.common.flows", "DataPreprocessing", "MLIPFitMaker", "autoplex.fitting.common.jobs", "machine_learning_fit", "autoplex.fitting.common.regularization", "TYPE_CHECKING", "calculate_hull_3D", "calculate_hull_ND", "get_convex_hull", "get_e_distance_to_hull", "get_e_distance_to_hull_3D", "get_intersect", "get_mole_frac", "label_stoichiometry_volume", "piecewise_linear", "point_in_triangle_2D", "point_in_triangle_ND", "set_sigma", "autoplex.fitting.common.utils", "TYPE_CHECKING", "calculate_delta", "check_convergence", "chemical_symbols", "compute_pairs_triplets", "convert_xyz_to_structure", "energy_remain", "extract_gap_label", "flatten", "gap_fitting", "gap_hyperparameter_constructor", "gcm3_to_Vm", "get_atomic_numbers", "get_list_of_vasp_calc_dirs", "jace_fitting", "load_mlip_hyperparameter_defaults", "m3gnet_fitting", "mace_fitting", "mace_virial_format_conversion", "nequip_fitting", "plot_convex_hull", "prepare_fit_environment", "run_ace", "run_gap", "run_mace", "run_nequip", "run_quip", "vaspoutput_2_extended_xyz", "write_after_distillation_data_split", "autoplex.fitting.phonons", "autoplex.fitting.phonons.flows", "autoplex.fitting.phonons.jobs", "autoplex.fitting.rss", "autoplex.fitting.rss.flows", "autoplex.fitting.rss.jobs", "API reference", "Benchmark", "Fitting potentials", "Out of the box workflow", "Generating reference data", "Getting started", "Jobflow-remote setup", "Setup", "Tutorials"], "terms": {"pleas": [1, 2, 4, 82, 85, 176, 177, 179, 180, 181], "write": [1, 4, 48, 67, 68, 79, 84, 88, 107, 167], "unit": [1, 4, 11, 16, 17, 18, 82, 85, 86, 103, 150, 155, 158, 175, 177, 178], "test": [1, 2, 4, 11, 12, 41, 61, 73, 78, 85, 101, 120, 121, 128, 141, 148, 153, 155, 156, 158, 160, 167, 176, 178], "thi": [1, 3, 4, 5, 7, 11, 12, 16, 19, 21, 26, 41, 59, 61, 63, 71, 82, 83, 84, 85, 86, 88, 101, 103, 106, 110, 120, 121, 136, 137, 153, 156, 158, 174, 175, 176, 177, 178, 179, 180], "i": [1, 2, 3, 4, 5, 7, 11, 12, 13, 15, 16, 18, 26, 27, 31, 32, 33, 35, 40, 41, 42, 45, 46, 47, 49, 52, 53, 57, 58, 59, 60, 61, 66, 71, 72, 74, 76, 79, 82, 84, 85, 86, 87, 88, 90, 91, 93, 96, 101, 104, 105, 106, 107, 110, 111, 112, 120, 121, 125, 135, 136, 139, 142, 143, 150, 153, 156, 158, 167, 175, 176, 177, 178, 179, 180, 181, 182], "ani": [1, 3, 4, 11, 18, 49, 60, 71, 82, 85, 86, 106, 137, 175, 177, 179, 180, 182], "ad": [1, 4, 72, 110, 178], "accept": [1, 4], "autom": [1, 4, 7, 8, 14, 176, 177, 179, 180], "perform": [1, 4, 10, 11, 40, 61, 63, 82, 85, 86, 95, 100, 107, 121, 153, 155, 156, 158, 177], "us": [1, 3, 4, 5, 6, 7, 11, 12, 16, 17, 18, 21, 26, 29, 32, 33, 35, 55, 59, 60, 61, 63, 71, 72, 77, 82, 84, 85, 86, 88, 91, 95, 96, 97, 101, 103, 106, 107, 110, 116, 120, 121, 122, 123, 137, 140, 148, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 173, 175, 177, 178, 179, 181, 182], "pytest": [1, 4, 5], "you": [1, 2, 4, 5, 7, 82, 85, 175, 176, 177, 178, 179, 180, 181, 182], "can": [1, 4, 5, 16, 55, 82, 85, 86, 95, 106, 175, 176, 177, 178, 179, 180, 181], "look": [1, 4, 175], "folder": [1, 4, 5], "exampl": [1, 4, 5, 106, 175, 177, 178, 182], "ensur": [1, 4, 178, 179], "high": [1, 4, 7, 82, 85, 107, 176, 178, 179], "coverag": [1, 4, 5], "base": [1, 4, 7, 11, 12, 16, 26, 33, 40, 41, 55, 59, 61, 62, 66, 82, 83, 84, 85, 86, 88, 103, 106, 110, 115, 120, 121, 137, 176, 177, 179, 180], "numpi": [1, 4, 11, 18, 49, 71, 77, 86, 106], "docstr": [1, 4], "an": [1, 4, 12, 55, 66, 69, 79, 106, 110, 112, 142, 143, 147, 174, 175, 176, 177, 178, 179, 180], "id": [1, 4, 5, 11, 12, 16, 18, 21, 26, 33, 86, 175, 176, 177, 180], "switch": [1, 4, 82, 88, 175, 177, 178], "type": [1, 4, 6, 11, 12, 19, 21, 29, 32, 33, 34, 35, 40, 41, 46, 48, 49, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 91, 94, 95, 96, 97, 101, 106, 107, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 177], "check": [1, 4, 7, 11, 39, 41, 47, 60, 85, 94, 135, 136, 141, 175, 177], "our": [1, 2, 4, 177, 180], "should": [1, 4, 40, 46, 53, 75, 101, 106, 175, 177, 180, 182], "other": [1, 2, 3, 4, 12, 66, 82, 85, 86, 132, 137, 175, 176, 177, 180], "peopl": [1, 4], "hint": [1, 4], "ar": [1, 3, 4, 11, 12, 13, 15, 18, 27, 31, 42, 45, 49, 53, 57, 59, 60, 71, 77, 82, 85, 86, 87, 90, 91, 93, 96, 104, 105, 106, 111, 112, 125, 137, 139, 142, 175, 176, 177, 178, 179, 180, 181, 182], "each": [1, 4, 16, 46, 53, 61, 63, 71, 100, 106, 120, 121, 137, 155, 156, 176, 177, 178], "variabl": [1, 4, 106, 180], "function": [1, 4, 7, 11, 14, 28, 30, 43, 53, 54, 59, 61, 63, 69, 89, 92, 99, 102, 108, 122, 124, 138, 153, 155, 156, 158, 176, 177, 178, 179, 180], "class": [1, 4, 10, 11, 12, 13, 14, 15, 25, 26, 27, 30, 31, 39, 40, 41, 42, 43, 45, 54, 55, 57, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 102, 103, 104, 106, 108, 110, 115, 119, 120, 121, 124, 125, 138, 139, 178], "method": [1, 4, 16, 26, 34, 53, 55, 101, 106, 107, 137, 176, 180], "help": [1, 4, 85, 175, 177, 180], "readabl": [1, 4], "especi": [1, 4, 177, 181], "someon": [1, 4], "els": [1, 4, 106, 180], "want": [1, 4, 5, 7, 175, 176, 177, 178, 179, 180], "build": [1, 4, 178, 182], "your": [1, 4, 5, 7, 12, 85, 110, 175, 176, 177, 179, 181, 182], "wai": [1, 3, 4, 106, 155, 176, 177, 178, 180], "give": [1, 4, 137, 174, 177], "user": [1, 4, 7, 16, 176, 177, 178, 180, 181, 182], "option": [1, 4, 40, 46, 52, 53, 55, 61, 91, 94, 96, 101, 106, 107, 121, 123, 137, 144, 148, 153, 155, 156, 158, 178, 180], "chang": [1, 4, 11, 18, 41, 49, 74, 86, 110, 176, 177, 178], "paramet": [1, 4, 11, 12, 16, 17, 18, 19, 20, 21, 26, 29, 32, 33, 34, 35, 40, 41, 44, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 91, 94, 95, 96, 97, 100, 101, 103, 106, 107, 110, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178], "mainli": [1, 4], "applic": [1, 4], "fit": [1, 3, 4, 5, 7, 9, 10, 11, 16, 17, 18, 23, 83, 86, 100, 101, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 178, 179, 182], "protocol": [1, 4], "flow": [1, 4, 8, 9, 11, 12, 13, 16, 18, 22, 23, 24, 26, 27, 36, 37, 38, 40, 41, 42, 80, 82, 83, 84, 85, 86, 87, 88, 98, 100, 101, 103, 117, 118, 120, 121, 168, 171, 175, 176, 177, 178, 180], "In": [1, 4, 105, 111, 112, 142, 175, 176, 179, 180], "word": [1, 4], "avoid": [1, 4, 84, 88, 110], "hardcod": [1, 4], "set": [1, 4, 11, 12, 16, 17, 18, 19, 35, 40, 49, 63, 69, 71, 77, 78, 82, 83, 84, 85, 86, 88, 91, 95, 96, 101, 103, 120, 121, 137, 147, 153, 156, 158, 167, 177, 179, 181, 182], "physic": [1, 4], "properti": [1, 4, 59, 61, 64, 85, 106, 110, 177], "reason": [1, 4], "default": [1, 4, 11, 16, 18, 26, 32, 33, 35, 40, 41, 46, 49, 53, 55, 60, 61, 71, 74, 76, 77, 85, 86, 101, 107, 121, 140, 148, 150, 153, 154, 155, 156, 158, 176, 177, 178, 179, 180, 182], "valu": [1, 4, 11, 16, 18, 26, 33, 41, 46, 49, 51, 52, 53, 59, 71, 74, 86, 101, 120, 121, 134, 137, 166, 167, 175, 176, 177, 178], "need": [1, 4, 5, 61, 106, 121, 137, 149, 176, 177, 178, 179, 180], "have": [1, 4, 5, 7, 40, 46, 53, 59, 85, 101, 175, 177, 180, 182], "opportun": [1, 4], "modifi": [1, 3, 4, 115], "them": [1, 4, 67, 68, 85, 175, 178, 180], "thei": [1, 4, 180], "wish": [1, 4], "we": [1, 2, 4, 5, 82, 85, 176, 177, 178, 180, 181], "current": [1, 4, 82, 84, 85, 86, 88, 101, 107, 176, 177, 179], "aim": [1, 4, 7, 179, 182], "follow": [1, 3, 4, 5, 11, 86, 101, 175, 176, 177, 179, 180, 181, 182], "below": [1, 3, 4, 106, 176, 180], "submodul": [1, 4, 182], "initi": [1, 4, 85, 86, 100, 101, 106, 180], "idea": [1, 4, 7, 178], "cours": [1, 4, 177], "could": [1, 4], "depend": [1, 4, 5, 16, 34, 35, 110, 179], "futur": [1, 4, 82, 85, 86, 176], "job": [1, 4, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 80, 84, 85, 86, 88, 90, 91, 92, 98, 101, 103, 104, 105, 106, 107, 117, 118, 119, 123, 138, 148, 168, 169, 171, 175, 176, 177, 178], "py": [1, 4, 59, 63, 110, 180], "defin": [1, 4, 136, 140, 178], "insid": [1, 4, 135, 136, 180], "modul": [1, 4, 8, 9, 22, 23, 24, 36, 37, 38, 80, 98, 106, 117, 118, 168, 171, 177, 180], "workflow": [1, 4, 5, 7, 22, 24, 36, 37, 38, 80, 82, 85, 98, 101, 178, 181, 182], "host": [1, 4, 180], "util": [1, 4, 31, 32, 33, 34, 35, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 93, 94, 95, 96, 97, 109, 110, 111, 112, 113, 114, 115, 116, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 178, 180], "all": [1, 4, 5, 11, 16, 17, 19, 20, 26, 41, 55, 60, 82, 85, 103, 106, 110, 128, 159, 163, 166, 175, 176, 177, 178, 180], "act": [1, 4], "small": [1, 4, 11, 18, 49, 71, 86, 177], "subtask": [1, 4], "calcul": [1, 4, 11, 16, 17, 18, 19, 20, 21, 40, 41, 47, 58, 61, 63, 72, 82, 83, 85, 86, 88, 100, 101, 115, 126, 127, 128, 129, 130, 132, 133, 140, 143, 153, 156, 158, 159, 166, 176, 177, 178, 179, 180, 181, 182], "some": [1, 4, 176], "metric": [1, 4, 11, 29, 33, 177, 182], "plot": [1, 4, 11, 16, 26, 32, 33, 35, 41, 51, 65, 70, 73, 75, 145, 159, 175, 177], "name": [1, 3, 4, 11, 12, 26, 32, 35, 40, 41, 46, 66, 73, 79, 82, 83, 84, 85, 86, 88, 94, 101, 103, 120, 121, 123, 128, 129, 130, 133, 137, 144, 148, 153, 155, 156, 157, 158, 160, 161, 164, 165, 167, 175, 176, 177, 178, 179, 180], "descript": [1, 4, 7], "snake": [1, 4], "case": [1, 4, 61, 85, 91, 94, 96, 175, 176, 177, 180], "variable_nam": [1, 4], "variablenam": [1, 4], "If": [1, 2, 4, 5, 11, 16, 18, 34, 35, 40, 49, 59, 66, 69, 76, 79, 86, 91, 96, 101, 103, 106, 112, 121, 142, 153, 155, 158, 175, 178, 180], "maker": [1, 4, 11, 12, 16, 17, 18, 20, 21, 26, 40, 41, 82, 83, 84, 85, 86, 88, 95, 97, 103, 120, 121, 178, 180], "python": [1, 4, 5, 156, 158, 175, 176, 179, 182], "convent": [1, 4, 11, 16, 17, 60, 82, 85, 176], "e": [1, 4, 5, 11, 18, 49, 58, 60, 61, 65, 66, 67, 68, 70, 74, 84, 86, 88, 105, 106, 110, 111, 112, 128, 130, 132, 133, 137, 142, 155, 156, 158, 176, 177, 178, 179, 180], "g": [1, 4, 11, 18, 49, 65, 67, 68, 70, 84, 86, 88, 106, 110, 130, 132, 133, 137, 150, 155, 156, 158, 176, 177, 178], "phononmak": [1, 4, 11, 41, 82, 85, 175, 178], "rssmaker": [1, 4], "pip": [1, 4, 5, 179, 180], "instal": [1, 4, 176, 177, 181], "pre": [1, 4, 5, 11, 120, 121, 182], "next": [1, 4, 106, 176, 177], "run": [1, 4, 11, 12, 19, 21, 26, 40, 41, 47, 99, 100, 101, 102, 107, 113, 114, 116, 160, 161, 162, 165, 178, 179, 180, 182], "hook": [1, 4], "from": [1, 2, 3, 4, 5, 11, 16, 18, 26, 40, 41, 46, 49, 52, 53, 55, 59, 61, 63, 65, 70, 71, 73, 75, 77, 82, 83, 85, 86, 101, 106, 110, 113, 149, 152, 154, 155, 156, 166, 175, 176, 177, 178], "config": [1, 4, 137, 156, 179, 181], "yaml": [1, 4, 179, 180, 181], "step": [1, 4, 41, 61, 71, 86, 106, 107, 121, 175, 176, 177, 180], "1": [1, 3, 4, 5, 11, 18, 35, 49, 53, 59, 60, 61, 68, 71, 74, 75, 76, 86, 91, 94, 96, 100, 101, 105, 106, 107, 110, 111, 120, 121, 132, 136, 137, 150, 155, 166, 167, 175, 176, 177, 178, 179, 180], "2": [1, 3, 4, 11, 18, 35, 49, 61, 74, 82, 85, 86, 100, 105, 106, 107, 111, 121, 175, 176, 179, 180], "done": [1, 4], "onli": [1, 4, 5, 13, 15, 27, 31, 42, 45, 57, 69, 70, 82, 85, 86, 87, 88, 90, 93, 101, 104, 106, 125, 128, 137, 139, 177, 178, 180, 182], "onc": [1, 4, 5, 179, 180], "local": [1, 4, 156, 177], "repositori": [1, 4, 5, 7, 59, 63], "proce": [1, 4, 41, 121], "usual": [1, 4, 137, 180], "automat": [1, 4, 5, 10, 11, 40, 84, 88, 91, 96, 121, 123, 124, 137, 148, 175, 176, 177, 178, 180], "linter": [1, 4], "To": [1, 4, 5, 84, 85, 88, 106, 177, 179, 180], "manual": [1, 4, 85, 180], "file": [1, 4, 5, 11, 16, 26, 29, 33, 35, 41, 46, 47, 48, 51, 53, 65, 66, 67, 68, 70, 73, 79, 84, 85, 88, 101, 103, 113, 120, 121, 145, 146, 148, 153, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 175, 176, 177, 179, 181], "just": [1, 4, 180], "specif": [1, 3, 4, 6, 85, 107, 121, 123, 137, 175, 176, 177, 178, 180], "path": [1, 4, 5, 11, 16, 51, 52, 82, 85, 101, 103, 107, 121, 123, 146, 148, 153, 154, 155, 156, 158, 160, 165, 175, 176, 177, 178, 180], "out": [1, 3, 4, 7, 60, 176, 182], "atomate2": [1, 4, 7, 11, 41, 82, 175, 176, 178, 179, 181, 182], "http": [1, 4, 5, 59, 63, 65, 70, 71, 73, 75, 121, 155, 166, 179, 180], "github": [1, 4, 5, 65, 70, 73, 75, 166, 179, 180], "com": [1, 4, 5, 179, 180], "materialsproject": [1, 4], "autoplex": [2, 3, 5, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 177, 178, 179, 180, 181, 182], "joint": 2, "between": [2, 11, 18, 29, 33, 34, 35, 49, 60, 74, 76, 86, 164, 177, 178], "two": [2, 11, 13, 15, 18, 27, 31, 42, 45, 49, 57, 60, 71, 86, 87, 90, 93, 104, 106, 125, 128, 139, 149, 176, 177, 179, 180], "research": [2, 7, 59, 63, 179], "group": [2, 5, 46, 85, 101, 179], "feder": 2, "institut": 2, "materi": [2, 3, 7, 11, 16, 18, 21, 26, 33, 82, 85, 86, 155, 177, 179, 182], "bam": [2, 175, 176, 177, 178, 179, 182], "univers": [2, 179], "It": [2, 5, 7, 40, 55, 85, 110, 153, 156, 158, 175, 178, 180], "incorpor": 2, "scientif": 2, "practic": 2, "know": 2, "how": [2, 106, 176, 177, 178, 180], "both": [2, 47, 91, 96, 177, 178, 181], "describ": [2, 106], "public": 2, "link": [2, 7], "prof": 2, "janin": [2, 179], "georg": 2, "websit": [2, 177, 181], "friedrich": 2, "schiller": 2, "jena": 2, "volker": [2, 59, 63], "dering": [2, 59, 63], "dr": 2, "christina": [2, 175, 176, 177, 178, 180, 182], "ertur": [2, 175, 176, 177, 178, 180, 182], "natascia": 2, "fragapan": 2, "yuanbin": 2, "liu": 2, "aakash": [2, 180], "ashok": 2, "naik": [2, 180], "joe": 2, "morrow": 2, "rss": [2, 8, 11, 37, 46, 53, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 153, 155, 156, 158, 179], "welcom": [2, 179], "contribut": [2, 7], "would": [2, 180], "like": [2, 5, 16, 175, 176, 177, 180], "see": [2, 71, 106, 175, 176, 178, 180], "guidelin": 2, "develop": [3, 7, 110, 179], "under": [3, 180], "bsd": [3, 155], "reproduc": [3, 178], "copyright": [3, 110], "c": [3, 105, 106, 111, 112, 142, 175, 180], "2023": 3, "team": 3, "redistribut": 3, "sourc": [3, 5, 7, 11, 12, 16, 17, 18, 19, 20, 21, 26, 29, 32, 33, 34, 35, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 91, 94, 95, 96, 97, 100, 101, 103, 107, 110, 113, 114, 115, 116, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180], "binari": 3, "form": [3, 11, 133, 175, 177], "without": [3, 11, 12, 18, 49, 52, 85, 86, 175], "modif": 3, "permit": 3, "provid": [3, 5, 7, 11, 12, 16, 18, 40, 41, 49, 55, 86, 101, 120, 121, 153, 156, 158, 175, 176, 177, 178, 179, 180], "condit": [3, 178], "met": [3, 178], "code": [3, 82, 85, 86, 110, 176, 179], "must": [3, 11, 18, 49, 82, 85, 86, 112, 142], "retain": 3, "abov": [3, 5, 106, 137, 178, 180], "notic": 3, "list": [3, 11, 12, 16, 17, 18, 19, 20, 21, 29, 34, 40, 41, 44, 46, 49, 53, 55, 59, 61, 63, 64, 69, 73, 74, 75, 76, 83, 86, 94, 96, 100, 101, 107, 112, 120, 121, 123, 128, 130, 132, 133, 136, 137, 140, 142, 143, 144, 148, 149, 151, 152, 163, 166, 175, 176, 177, 180], "disclaim": 3, "document": [3, 175, 177, 180], "distribut": [3, 11, 18, 41, 49, 51, 65, 70, 71, 77, 86, 145, 178], "3": [3, 53, 59, 82, 85, 100, 101, 105, 106, 110, 111, 127, 155, 176, 178, 179, 180], "neither": 3, "holder": 3, "nor": 3, "its": [3, 72, 106, 164, 176, 177, 178], "contributor": 3, "mai": [3, 180], "endors": 3, "promot": 3, "product": [3, 53, 58, 59, 61], "deriv": [3, 40], "softwar": [3, 7, 179, 182], "prior": 3, "written": [3, 79, 175, 176, 177, 178, 180, 182], "permiss": 3, "BY": [3, 59, 63], "THE": 3, "AND": 3, "AS": 3, "express": 3, "OR": 3, "impli": [3, 106], "warranti": 3, "includ": [3, 11, 33, 40, 53, 101, 120, 121, 123, 144, 149, 155, 166, 177, 178], "BUT": 3, "NOT": 3, "limit": [3, 73, 107, 176], "TO": 3, "OF": 3, "merchant": 3, "FOR": 3, "A": [3, 6, 11, 12, 21, 29, 32, 33, 35, 40, 46, 55, 62, 69, 82, 84, 85, 88, 95, 103, 115, 120, 121, 128, 140, 148, 152, 153, 155, 156, 158, 167, 175, 177, 178], "particular": 3, "purpos": [3, 128], "IN": 3, "NO": 3, "event": 3, "shall": [3, 91, 94, 96, 176, 178], "BE": 3, "liabl": 3, "direct": 3, "indirect": 3, "incident": 3, "special": 3, "exemplari": 3, "consequenti": 3, "damag": 3, "procur": 3, "substitut": 3, "good": [3, 61, 178], "servic": 3, "loss": [3, 156, 176], "data": [3, 10, 11, 22, 26, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 124, 141, 153, 155, 156, 158, 160, 165, 166, 167, 171, 175, 176, 177, 180, 181, 182], "profit": 3, "busi": 3, "interrupt": 3, "howev": [3, 5, 82, 85, 177], "caus": [3, 110], "ON": 3, "theori": 3, "liabil": 3, "whether": [3, 33, 40, 41, 53, 63, 82, 85, 101, 106, 107, 121, 149, 177], "contract": 3, "strict": [3, 5, 85, 175, 179, 180], "tort": 3, "neglig": 3, "otherwis": [3, 13, 15, 27, 31, 42, 45, 52, 57, 82, 85, 87, 90, 93, 104, 125, 139, 176], "aris": 3, "even": [3, 180], "IF": 3, "advis": [3, 176, 182], "possibl": [3, 55, 56, 82, 85, 91, 96, 109, 178], "SUCH": 3, "clone": 5, "via": [5, 11, 16, 175, 179], "git": [5, 179, 180], "jageo": 5, "cd": [5, 105, 111, 112, 142, 179], "doc": [5, 26, 179, 180], "dev": [5, 179], "commit": 5, "note": [5, 11, 18, 19, 21, 49, 58, 59, 61, 63, 72, 84, 86, 88, 106, 156, 176, 177, 178, 180], "non": [5, 110], "program": [5, 6], "buildcel": [5, 103, 179], "julia": [5, 153, 161, 176, 179], "ac": [5, 59, 63, 105, 107, 111, 112, 113, 121, 123, 142, 153, 161, 179, 182], "potenti": [5, 7, 9, 10, 11, 16, 17, 18, 23, 25, 26, 28, 29, 33, 41, 43, 59, 63, 81, 83, 86, 89, 101, 110, 113, 115, 117, 118, 119, 121, 123, 146, 148, 149, 153, 155, 156, 158, 160, 168, 169, 170, 171, 177, 179, 182], "command": [5, 164, 176, 179], "One": 5, "seper": 5, "altern": [5, 178, 179], "one": [5, 85, 106, 107, 121, 123, 175, 176, 177, 178, 179, 180], "devcontain": 5, "environ": [5, 7, 160, 175, 176, 179, 180], "setup": [5, 176, 177], "ha": [5, 16, 47, 106, 176, 178], "been": [5, 59, 177], "work": [5, 101, 137], "vscode": 5, "pycharm": 5, "prerequisit": [5, 178, 179, 181], "docker": 5, "system": [5, 61, 110, 137, 177, 180], "publish": 5, "imag": [5, 60, 106], "creat": [5, 7, 39, 43, 50, 81, 84, 89, 103, 106, 112, 121, 142, 179, 180], "env": [5, 11, 175, 176, 177, 180], "get": [5, 7, 41, 50, 63, 84, 88, 110, 151, 177], "detail": [5, 7, 71, 177, 178, 180], "report": 5, "cov": 5, "term": [5, 11, 121, 123, 148, 153, 160, 176], "miss": [5, 175], "append": [5, 175, 176, 177], "feel": 5, "execut": [5, 149, 153, 156, 158, 164, 175, 177], "take": [5, 49, 60, 71, 74, 76, 77, 103, 178, 179], "too": [5, 60, 85, 91, 96, 176, 177], "long": [5, 91, 96], "speedup": 5, "xdist": 5, "librari": [5, 155], "now": [5, 180, 182], "multipl": [5, 7, 158, 178, 179], "processor": 5, "For": [5, 61, 64, 106, 120, 121, 153, 167, 175, 176, 178, 180], "8": [5, 40, 53, 74, 105, 106, 111, 137, 155, 176, 180], "parallel": [5, 72, 103, 114, 153], "n": [5, 19, 71, 105, 111, 112, 127, 132, 136, 142, 177, 180], "reli": [5, 82, 85, 176, 177, 178, 179, 181], "split": [5, 78, 101, 167, 176], "thu": 5, "necessari": [5, 85, 180], "updat": [5, 40, 97, 115], "durat": 5, "incas": 5, "add": [5, 11, 16, 18, 86, 176, 177, 179, 181], "new": [5, 100, 112, 142, 180], "gener": [5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 21, 22, 29, 32, 33, 34, 35, 37, 38, 41, 49, 50, 55, 59, 62, 63, 65, 67, 68, 70, 71, 74, 76, 77, 80, 82, 83, 84, 85, 86, 88, 92, 98, 100, 101, 103, 106, 122, 166, 179, 180, 182], "test_data": 5, "store": [5, 79, 82, 85, 103, 106, 155, 175, 176, 177, 181], "The": [5, 7, 11, 13, 15, 16, 27, 31, 41, 42, 45, 50, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 66, 72, 82, 84, 85, 87, 88, 90, 93, 101, 104, 106, 112, 125, 139, 141, 142, 164, 172, 175, 176, 177, 178, 179, 180, 182], "built": [5, 82, 85, 91, 94, 96, 112, 142], "sphinx": 5, "packag": [5, 11, 110, 176, 177, 179, 181, 182], "_build": 5, "directori": [5, 11, 40, 46, 53, 64, 84, 88, 101, 120, 121, 123, 148, 153, 155, 156, 158, 160, 166, 176, 177, 180], "w": [5, 82, 85, 105, 106, 111, 112, 142, 180], "placehold": 6, "date": [7, 59, 63, 110, 155], "oct": 7, "23": [7, 105, 110, 111], "2024": [7, 110, 155], "issu": 7, "tool": [7, 82, 85, 182], "benchmark": [7, 9, 10, 11, 16, 26, 27, 29, 31, 32, 33, 34, 35, 177, 178, 179, 182], "machin": [7, 11, 44, 101, 177, 179, 182], "learn": [7, 11, 44, 59, 63, 101, 158, 177, 179, 182], "ml": [7, 9, 10, 11, 16, 17, 18, 25, 26, 29, 32, 33, 34, 35, 41, 43, 81, 83, 85, 86, 89, 101, 119, 121, 169, 170, 171, 176, 177, 179], "interatom": [7, 11, 60, 71, 101, 177, 179, 182], "fulli": [7, 69, 85, 106, 147, 179], "solut": [7, 179], "qualiti": [7, 16, 177, 178, 179], "interfac": [7, 106, 179], "differ": [7, 16, 40, 55, 82, 85, 88, 110, 164, 177, 178, 179], "framework": [7, 179, 182], "ase": [7, 11, 41, 53, 59, 61, 63, 72, 78, 86, 110, 130, 137, 157, 166, 178, 179, 182], "effici": [7, 179], "throughput": [7, 82, 85, 179], "comput": [7, 11, 16, 17, 18, 33, 34, 71, 75, 82, 85, 86, 95, 97, 103, 153, 179], "vision": [7, 179], "project": [7, 11, 16, 18, 26, 33, 86, 176, 177, 179, 180, 182], "allow": [7, 11, 18, 41, 49, 60, 64, 74, 82, 85, 86, 91, 94, 96, 106, 120, 121, 167, 177, 179], "wide": [7, 179], "commun": [7, 179], "accur": [7, 85, 178, 179], "reliabl": [7, 177, 179], "simul": [7, 53, 179], "guid": [7, 59, 63, 176, 177, 179, 181], "inform": [7, 53, 106, 115, 176, 177, 180], "start": [7, 16, 20, 82, 85, 182], "tutori": [7, 65, 70, 73, 75, 155, 175, 176, 177, 178, 180, 181], "api": [7, 177, 178], "refer": [7, 11, 16, 17, 18, 22, 26, 35, 37, 38, 46, 64, 65, 67, 68, 70, 75, 80, 86, 98, 101, 106, 121, 123, 144, 148, 153, 155, 156, 158, 167, 175, 180, 181, 182], "contain": [7, 8, 9, 11, 12, 16, 22, 23, 24, 26, 33, 36, 37, 38, 40, 46, 53, 62, 69, 80, 84, 88, 98, 106, 107, 117, 118, 128, 140, 153, 155, 156, 158, 163, 168, 171, 175, 176, 177], "assum": 7, "broad": 7, "understand": [7, 175], "kei": [7, 46, 53, 72, 84, 88, 128, 129, 130, 133, 137, 148, 153, 155, 156, 158, 177, 180], "concept": 7, "do": [7, 110, 175, 177, 178, 180], "own": [7, 177, 178, 181, 182], "improv": [7, 100], "exist": [7, 16, 103, 176, 178, 179, 180, 182], "phonon": [8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 31, 32, 33, 34, 35, 41, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 140, 148, 166, 175, 176, 177, 178, 180], "auto": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 175, 176, 177, 178], "add_data": 11, "add_dft_phonon_struct": [11, 16, 178], "true": [11, 13, 15, 16, 18, 27, 31, 34, 41, 42, 45, 47, 53, 57, 60, 63, 69, 82, 85, 86, 87, 90, 91, 93, 96, 100, 101, 103, 104, 107, 120, 121, 123, 125, 139, 144, 148, 155, 166, 175, 176, 177, 178, 180], "add_dft_random_struct": [11, 178], "add_rss_struct": 11, "fals": [11, 13, 15, 18, 27, 31, 34, 40, 42, 44, 45, 57, 66, 69, 79, 82, 85, 86, 87, 90, 93, 100, 101, 104, 107, 115, 120, 121, 123, 125, 139, 147, 148, 149, 165, 175, 176, 177, 178], "displacement_mak": [11, 18, 86, 178], "none": [11, 16, 17, 18, 21, 40, 41, 44, 46, 49, 52, 53, 55, 59, 61, 63, 67, 68, 73, 74, 76, 79, 82, 83, 85, 86, 94, 95, 100, 101, 103, 106, 107, 110, 115, 120, 121, 123, 130, 132, 133, 137, 148, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167], "phonon_bulk_relax_mak": [11, 16, 17, 178], "phonon_static_energy_mak": [11, 16, 17, 178], "rattled_bulk_relax_mak": [11, 18, 178], "isolated_atom_mak": [11, 20, 83, 178], "n_structur": [11, 18, 41, 49, 71, 74, 76, 77, 86, 176, 178], "10": [11, 18, 49, 59, 63, 71, 74, 76, 82, 85, 86, 94, 100, 101, 105, 110, 111, 176, 177, 178, 180], "displac": [11, 12, 16, 17, 18, 19, 26, 33, 41, 49, 71, 82, 85, 86, 88, 175, 177, 178], "factori": [11, 12, 82, 84, 85, 86, 88], "symprec": [11, 16, 17, 82, 85, 176], "0": [11, 16, 18, 33, 40, 41, 44, 49, 51, 53, 56, 59, 61, 63, 67, 68, 71, 74, 76, 77, 82, 85, 86, 94, 100, 101, 105, 106, 107, 109, 110, 111, 120, 121, 137, 166, 167, 175, 176, 177, 178, 179, 180], "0001": [11, 82], "uc": [11, 18, 86], "volume_custom_scale_factor": [11, 18, 49, 76, 86, 178], "volume_scale_factor_rang": [11, 18, 49, 76, 86, 176, 178], "rattle_std": [11, 18, 41, 49, 71, 77, 86], "01": [11, 16, 18, 33, 41, 49, 76, 77, 82, 85, 86, 100, 106, 107, 120, 121, 166, 175, 176, 177, 180], "distort_typ": [11, 18, 49, 86, 176, 178], "min_dist": [11, 18, 49, 60, 71, 74, 86], "5": [11, 18, 41, 44, 49, 51, 53, 60, 61, 71, 74, 77, 86, 91, 96, 100, 105, 106, 111, 120, 175, 176, 178, 180], "angle_percentage_scal": [11, 18, 49, 74, 86], "angle_max_attempt": [11, 18, 49, 74, 86], "1000": [11, 18, 41, 49, 74, 86, 107, 176], "rattle_typ": [11, 18, 49, 86, 176, 178], "rattle_se": [11, 18, 49, 71, 77, 86], "42": [11, 18, 49, 71, 77, 86, 105, 106, 111, 130, 132, 133, 137], "rattle_mc_n_it": [11, 18, 49, 71, 86], "w_angl": [11, 18, 49, 74, 86], "ml_model": [11, 16, 26, 32, 33, 85, 175, 176], "hyper_para_loop": [11, 176], "atomwise_regularization_list": [11, 176], "soap_delta_list": [11, 176], "n_sparse_list": [11, 176], "supercell_set": [11, 12, 16, 17, 18, 19, 85, 86], "benchmark_kwarg": 11, "path_to_default_hyperparamet": [11, 148, 153, 155, 156, 158], "posixpath": 11, "home": [11, 180], "runner": [11, 161, 162, 163, 164, 165, 180], "micromamba": 11, "autoplex_doc": 11, "lib": 11, "python3": 11, "site": 11, "common": [11, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 175, 176], "mlip": [11, 16, 41, 65, 67, 68, 70, 85, 95, 100, 101, 107, 116, 121, 122, 123, 140, 148, 153, 154, 155, 156, 158, 160, 175, 177, 178, 182], "json": [11, 140, 148, 153, 154, 155, 156, 158, 175, 176], "summary_filename_prefix": 11, "results_": [11, 29], "construct": [11, 16, 106, 149, 177, 178], "dft": [11, 12, 16, 17, 18, 26, 29, 32, 33, 34, 35, 40, 65, 67, 68, 70, 82, 83, 85, 86, 88, 95, 121, 128, 129, 130, 133, 176, 178, 182], "vasp": [11, 20, 26, 40, 46, 47, 64, 82, 83, 84, 85, 86, 100, 101, 120, 166, 167, 175, 176, 177, 179, 181, 182], "dataset": [11, 16, 78, 120, 121, 148, 155, 156, 167], "compos": 11, "configur": [11, 40, 41, 46, 48, 53, 101, 153, 156, 158], "singl": [11, 19, 40, 101, 116, 137, 177, 178, 180], "atom": [11, 16, 18, 20, 26, 33, 40, 41, 49, 53, 55, 59, 60, 61, 63, 64, 65, 69, 70, 71, 72, 74, 78, 79, 83, 84, 85, 86, 91, 94, 96, 101, 110, 115, 116, 120, 121, 123, 128, 129, 130, 132, 133, 137, 140, 143, 144, 145, 147, 150, 151, 153, 155, 156, 157, 158, 166, 176, 177, 178], "supercel": [11, 12, 16, 17, 18, 19, 21, 41, 49, 50, 82, 85, 86, 91, 94, 95, 96, 97, 176, 177, 178], "subroutin": [11, 178], "randomli": [11, 18, 41, 49, 71, 74, 86], "rattl": [11, 12, 18, 41, 49, 60, 71, 77, 86, 177, 182], "": [11, 70, 72, 82, 83, 85, 105, 106, 111, 112, 123, 142, 158, 176, 179, 180], "result": [11, 29, 61, 63, 107, 155, 175, 176, 180, 182], "level": [11, 106, 180], "structur": [11, 12, 16, 17, 18, 19, 20, 21, 26, 29, 32, 33, 34, 35, 40, 41, 49, 50, 53, 60, 71, 74, 76, 77, 78, 82, 85, 86, 91, 94, 96, 97, 100, 101, 103, 107, 129, 130, 132, 137, 144, 155, 157, 167, 175, 176, 177, 180, 182], "compar": 11, "respect": [11, 95, 155, 176, 177, 181], "band": [11, 26, 29, 32, 33, 34, 35, 82, 85], "comparison": [11, 16, 26, 32, 175, 177], "q": [11, 16, 26, 35, 175, 177], "point": [11, 16, 26, 40, 56, 101, 106, 109, 126, 127, 128, 129, 131, 135, 136, 159, 175, 176, 177], "wise": [11, 16, 26, 33, 120, 121, 166, 175, 176, 177], "rmse": [11, 16, 26, 34, 35, 75, 145, 175, 177], "well": [11, 16, 26, 176, 177, 178, 180], "summari": [11, 26, 29, 175, 177], "text": [11, 26, 29, 177], "str": [11, 12, 16, 21, 26, 29, 32, 33, 35, 40, 41, 44, 46, 48, 51, 52, 53, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 79, 82, 83, 84, 85, 86, 88, 94, 100, 101, 103, 107, 120, 121, 123, 128, 129, 130, 133, 137, 140, 144, 145, 148, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167], "produc": [11, 26, 82, 83, 85, 86, 103, 120, 121, 177, 178], "bool": [11, 13, 15, 16, 18, 27, 29, 31, 33, 34, 40, 41, 42, 44, 45, 53, 57, 63, 66, 69, 79, 82, 85, 86, 87, 90, 93, 100, 101, 103, 104, 107, 120, 121, 123, 125, 135, 136, 139, 141, 144, 147, 148, 149, 155, 160, 165, 166, 167, 178], "phonopi": [11, 16, 17, 82, 85, 91, 96, 176, 177, 182], "distort": [11, 18, 49, 60, 74, 76, 86, 178], "int": [11, 13, 15, 16, 18, 21, 27, 31, 35, 40, 41, 42, 45, 49, 51, 53, 55, 57, 59, 61, 62, 63, 71, 74, 76, 77, 86, 87, 90, 91, 93, 94, 96, 100, 101, 103, 104, 106, 107, 110, 121, 123, 125, 139, 148, 153, 155, 156, 158, 161, 162, 165], "total": [11, 18, 41, 49, 86, 106, 153], "number": [11, 18, 40, 41, 49, 53, 55, 56, 59, 61, 62, 63, 71, 74, 76, 77, 82, 85, 86, 91, 94, 96, 101, 103, 106, 107, 109, 110, 121, 123, 130, 132, 133, 137, 140, 143, 148, 150, 151, 153, 155, 158, 161, 162, 165, 175, 176, 179, 180, 181], "basevaspmak": [11, 12, 16, 17, 18, 21, 82, 86], "static": [11, 16, 17, 18, 40, 41, 48, 82, 84, 85, 86, 88, 95, 101, 166, 177, 178], "bulk": [11, 16, 17, 18, 40, 82, 85, 95, 101], "relax": [11, 16, 17, 18, 41, 82, 85, 95, 107, 178], "cell": [11, 12, 16, 17, 18, 41, 48, 51, 60, 82, 85, 86, 103, 110, 178], "energi": [11, 16, 17, 46, 53, 58, 59, 61, 63, 65, 67, 70, 73, 75, 82, 83, 85, 95, 101, 110, 115, 121, 123, 128, 129, 130, 133, 137, 144, 145, 148, 153, 155, 156, 158, 176, 177, 178], "isoatomstaticmak": [11, 20, 178], "isol": [11, 20, 40, 46, 53, 59, 61, 83, 84, 101, 121, 123, 130, 133, 137, 153, 158, 176, 177, 178], "volum": [11, 18, 41, 49, 61, 76, 86, 128, 133, 137, 175, 178], "specifi": [11, 18, 46, 49, 76, 86, 107, 112, 121, 123, 142, 153, 156, 158, 178], "rang": [11, 18, 40, 49, 76, 86, 101, 178], "angl": [11, 18, 49, 60, 74, 82, 85, 86, 175, 178], "float": [11, 16, 17, 18, 26, 29, 33, 34, 40, 41, 44, 49, 51, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 85, 86, 91, 94, 96, 100, 101, 106, 107, 109, 110, 120, 121, 129, 130, 131, 132, 137, 140, 141, 143, 148, 153, 155, 156, 158, 166, 167], "distanc": [11, 33, 40, 53, 60, 71, 82, 85, 101, 110, 129, 130, 137, 143, 153], "symmetri": [11, 12, 16, 17, 82, 85], "precis": [11, 16, 17, 82, 85], "reduct": [11, 16, 17, 82, 85], "find": [11, 16, 17, 82, 85, 177, 180, 181], "primit": [11, 16, 17, 82, 85], "use_primitive_standard_structur": [11, 16, 17, 82, 85], "use_conventional_standard_structur": [11, 16, 17, 82, 85], "handl": [11, 16, 17, 55, 82, 85, 137, 153, 156, 158], "relat": [11, 16, 17, 82, 85, 106, 178], "task": [11, 16, 17, 26, 82, 85, 175, 177, 179, 181], "unitcel": [11, 18], "min": [11, 18, 49, 76, 82, 85, 86, 91, 94, 96, 137], "max": [11, 18, 49, 76, 86, 91, 94, 96, 137], "scale": [11, 18, 49, 74, 76, 86, 153, 178], "factor": [11, 18, 41, 48, 49, 51, 58, 74, 76, 86, 178], "90": [11, 18, 49, 76, 82, 85, 86, 105, 111, 175, 178], "explicit": [11, 18, 49, 76, 86], "95": [11, 18, 49, 76, 86, 105, 106, 111, 176, 178], "98": [11, 18, 49, 76, 86, 105, 106, 111], "99": [11, 18, 49, 76, 86, 105, 106, 111, 176], "02": [11, 18, 49, 76, 86, 106, 177], "05": [11, 18, 49, 76, 82, 85, 86, 106, 176, 177, 178], "minimum": [11, 18, 41, 49, 51, 58, 60, 71, 74, 86, 91, 94, 96, 110, 178], "separ": [11, 16, 18, 49, 60, 71, 74, 86, 110, 120, 121, 176], "5a": [11, 18, 49, 60, 71, 74, 86], "origin": [11, 18, 49, 74, 86, 178], "maximum": [11, 18, 41, 49, 51, 53, 59, 61, 74, 86, 101, 107, 155, 158, 176], "attempt": [11, 18, 49, 74, 86], "befor": [11, 18, 49, 74, 85, 86, 179, 180], "abort": [11, 18, 49, 74, 86], "indic": [11, 18, 49, 74, 86, 110, 149], "alpha": [11, 18, 49, 74, 86], "beta": [11, 18, 49, 74, 86], "gamma": [11, 18, 49, 74, 86], "standard": [11, 18, 41, 49, 71, 75, 77, 82, 85, 86, 178], "mont": [11, 18, 49, 71, 86, 178], "carlo": [11, 18, 49, 71, 86, 178], "amplitud": [11, 18, 41, 49, 71, 77, 86], "deviat": [11, 18, 41, 49, 71, 75, 77, 86, 178], "normal": [11, 18, 41, 49, 71, 77, 86, 178], "mc": [11, 18, 49, 71, 86, 105, 111, 112, 142], "roughli": [11, 18, 49, 71, 86], "n_iter": [11, 18, 49, 71, 86], "seed": [11, 18, 49, 53, 59, 63, 71, 77, 86, 101, 103], "up": [11, 18, 40, 49, 71, 77, 78, 86, 153, 156, 158, 176, 178, 179, 180, 181], "random": [11, 18, 41, 49, 53, 59, 63, 71, 77, 86, 101, 103, 106, 166, 176, 177, 178], "state": [11, 18, 49, 71, 77, 85, 86, 180], "which": [11, 18, 40, 49, 52, 58, 59, 61, 63, 71, 72, 77, 84, 86, 88, 91, 96, 103, 106, 155, 176, 177, 178, 179], "iter": [11, 18, 19, 49, 69, 71, 86, 100, 101, 106, 107, 110, 112, 142, 147, 176], "larger": [11, 18, 49, 71, 86, 156, 177], "model": [11, 16, 26, 32, 33, 41, 44, 85, 95, 101, 107, 153, 155, 156, 158, 163, 176, 178], "gap": [11, 16, 26, 32, 33, 41, 46, 65, 70, 73, 75, 85, 100, 101, 107, 121, 123, 140, 146, 148, 149, 154, 162, 177, 182], "make": [11, 12, 26, 40, 41, 65, 70, 73, 75, 82, 83, 84, 85, 86, 88, 103, 120, 121, 136, 137, 175, 176, 177, 178, 179, 180, 181], "easier": [11, 66, 106], "loop": [11, 16, 176], "through": [11, 16, 131, 176], "sever": [11, 16, 122, 176, 177, 178], "hyperparamet": [11, 16, 101, 121, 123, 149, 163, 176, 177], "regular": [11, 16, 26, 33, 44, 100, 101, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 166, 176], "soap": [11, 16, 26, 33, 53, 59, 62, 63, 72, 121, 123, 148, 149, 176, 177], "delta": [11, 121, 123, 140, 148, 176, 177], "n_spars": [11, 176, 177], "dict": [11, 12, 16, 18, 19, 26, 33, 40, 41, 46, 53, 59, 61, 62, 75, 82, 84, 85, 86, 88, 95, 100, 101, 103, 106, 107, 120, 121, 123, 130, 133, 137, 148, 149, 152, 153, 154, 155, 156, 158, 176, 180], "kwarg": [11, 82, 85, 115, 128, 129], "prefix": [11, 29, 66, 164], "structure_list": [11, 12, 20, 41, 94, 175, 176, 177, 178], "mp_id": [11, 12, 16, 18, 21, 33, 86, 175, 176, 177, 178], "split_ratio": [11, 78, 120, 121, 167, 176], "4": [11, 40, 53, 59, 61, 63, 82, 100, 105, 106, 111, 121, 176, 180], "f_max": [11, 44, 64, 100, 101, 120, 121, 167, 176], "40": [11, 44, 105, 111, 120, 121, 176], "pre_xyz_fil": [11, 120, 121, 176, 178], "pre_database_dir": [11, 44, 101, 120, 121, 176, 178], "preprocessing_data": [11, 121, 175, 176, 177, 178], "atomwise_regularization_paramet": [11, 16, 26, 33, 120, 121, 176], "f_min": [11, 120, 121, 166, 176], "atom_wise_regular": [11, 120, 121, 166, 176], "auto_delta": [11, 121, 123, 148, 176], "dft_refer": [11, 16, 175], "benchmark_structur": [11, 16, 29, 175, 176, 177, 178], "benchmark_mp_id": [11, 16, 26, 175, 176, 177, 178], "fit_kwarg": [11, 100, 101, 121, 123, 148, 153, 155, 156, 158, 176], "pymatgen": [11, 16, 17, 18, 20, 26, 32, 33, 34, 35, 41, 49, 50, 60, 71, 74, 76, 77, 82, 83, 85, 86, 91, 94, 96, 144, 180], "divid": [11, 78, 120, 121, 167, 177], "train": [11, 39, 41, 43, 53, 54, 73, 78, 81, 85, 86, 89, 120, 121, 124, 148, 153, 155, 156, 158, 160, 163, 167, 176, 177, 178], "mean": [11, 29, 33, 34, 35, 120, 121, 167], "ratio": [11, 120, 121, 167], "9": [11, 100, 105, 106, 111, 120, 121, 157, 167, 179], "maxim": [11, 64, 91, 94, 96, 120, 121, 167], "forc": [11, 16, 17, 26, 33, 41, 51, 64, 65, 68, 70, 73, 75, 82, 85, 95, 97, 101, 107, 110, 115, 120, 121, 123, 137, 144, 148, 153, 155, 156, 158, 166, 167, 176, 177, 180], "databas": [11, 17, 18, 101, 120, 121, 123, 137, 148, 160, 177, 178, 181, 182], "xyz": [11, 41, 120, 121], "preprocess": [11, 44, 100, 101, 120, 121, 176, 177], "compon": [11, 16, 26, 33, 61, 70, 120, 121, 166, 167], "minim": [11, 120, 121, 166], "cutoff": [11, 53, 120, 121, 143, 153, 155, 156, 158, 166, 176], "determin": [11, 55, 82, 85, 86, 121, 123, 148, 176, 178], "2b": [11, 121, 123, 148, 160, 176], "3b": [11, 121, 123, 148, 176], "phononbsdosdoc": [11, 26, 175], "phononbsdocdoc": [11, 16], "object": [11, 12, 16, 17, 18, 20, 26, 32, 33, 34, 35, 40, 41, 48, 49, 50, 55, 60, 69, 71, 74, 76, 77, 78, 79, 83, 91, 94, 96, 106, 115, 128, 133, 137, 140, 143, 144, 147, 175, 180], "keyword": [11, 16, 41, 82, 84, 85, 86, 88, 95, 106, 121, 123, 153, 155, 156, 158, 176, 177, 180], "arg": [11, 82, 85, 115, 121, 123], "add_dft_phonon": 11, "phonon_displacement_mak": [11, 16, 17, 82, 85, 95, 97, 175], "add_dft_random": 11, "dft_maker": [12, 21], "queue": [12, 180], "although": 12, "impress": 12, "requir": [12, 53, 94, 106, 153, 158, 163, 176, 180], "memori": [12, 103, 106, 176], "resourc": [12, 176, 177, 180], "process": [12, 16, 101, 103, 107, 121, 123, 148, 153, 155, 176, 180], "consider": 12, "given": [12, 16, 52, 58, 62, 70, 72, 84, 88, 106, 112, 142, 143, 175, 176, 178], "mp": [12, 175, 176, 177, 180], "return": [12, 13, 15, 19, 21, 27, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 87, 90, 91, 93, 94, 95, 96, 97, 101, 104, 107, 110, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180], "output": [12, 16, 48, 49, 60, 65, 70, 71, 74, 76, 77, 94, 107, 115, 121, 145, 152, 153, 156, 157, 158, 165, 166, 175, 180, 182], "x": [13, 15, 27, 31, 41, 42, 45, 51, 57, 87, 90, 93, 104, 105, 106, 111, 112, 125, 131, 134, 137, 139, 142], "when": [13, 15, 27, 31, 42, 45, 57, 87, 90, 93, 104, 125, 139, 153, 158, 176, 177, 180], "argument": [13, 15, 16, 27, 31, 41, 42, 45, 57, 82, 84, 85, 87, 88, 90, 93, 95, 101, 103, 104, 112, 125, 139, 142, 149, 153, 155, 156, 158, 164, 176, 178], "builtin": [13, 15, 27, 31, 42, 45, 57, 87, 90, 93, 104, 125, 139], "instanc": [13, 15, 27, 31, 42, 45, 57, 87, 90, 93, 104, 125, 139], "subclass": [13, 15, 27, 31, 42, 45, 57, 87, 90, 93, 104, 125, 139], "cannot": [13, 15, 27, 31, 42, 45, 57, 84, 87, 88, 90, 93, 104, 125, 139, 156, 177, 181], "ml_path": 16, "ibenchmark_structur": 16, "fit_input": [16, 120, 121, 176], "soap_dict": [16, 26, 33], "relax_maker_kwarg": [16, 85, 95], "static_maker_kwarg": [16, 85, 95], "ml_phonon_maker_kwarg": 16, "complet": [16, 85, 177, 178], "Then": [16, 41, 177], "alreadi": [16, 178], "previou": 16, "bandstructur": [16, 175, 177], "overal": [16, 33, 175, 176, 177], "repeat": [16, 120, 121, 175, 176, 178, 180], "activ": [16, 110, 177, 180], "sigma": [16, 120, 121, 137, 176, 178], "gap_fil": [16, 175, 176], "xml": [16, 41, 121, 123, 146, 148, 160, 166, 175, 176], "ith": 16, "completephonondftmldatagenerationflow": [16, 121], "pass": [16, 41, 82, 84, 85, 88, 95, 131, 175, 176, 177, 180], "relaxmak": [16, 85, 95], "staticmak": [16, 84, 85, 95, 178], "mlphononmak": [16, 95, 176], "finit": [16, 26], "dictionari": [16, 26, 33, 40, 46, 53, 59, 62, 72, 84, 88, 106, 107, 110, 120, 130, 133, 137, 148, 149, 153, 155, 156, 158], "replac": [19, 21, 176, 177], "itself": [19, 21], "socket": [19, 82, 85], "collect": [20, 41, 46, 55, 100, 101, 177, 178, 180], "speci": [20, 40, 53, 55, 59, 62, 73, 83, 110, 151, 177], "supercell_matric": 21, "matric": 21, "forcefieldstaticmak": [21, 41, 85, 95, 175], "baseaimsmak": 21, "dispac": 21, "respons": [21, 40, 49, 60, 71, 74, 76, 77], "phononbenchmark": 26, "chosen": [26, 41, 59, 91, 96, 176, 177], "ml_phonon_task_doc": [26, 175], "dft_phonon_task_doc": [26, 175], "suffix": [26, 33, 85], "drawn": [26, 86], "consist": [26, 101, 119, 169, 178], "atomist": 28, "filename_prefix": 29, "evalu": 29, "root": [29, 33, 34, 35], "squar": [29, 33, 34, 35], "error": [29, 33, 34, 35, 40, 101, 141, 153, 155, 156, 158, 177, 180, 182], "imagmodesdft": 29, "imagmodesml": 29, "ml_b": [32, 34, 35], "dft_b": [32, 34, 35], "file_nam": [32, 35], "band_comparison": 32, "pdf": [32, 35], "save": [32, 35, 103, 155, 177], "overlai": 32, "visual": 32, "phononbandstructuresymmlin": [32, 33, 34, 35], "matplotlib": [32, 35, 41], "figur": [32, 35, 177], "plt": [32, 35, 65, 70], "ml_phonon_b": 33, "dft_phonon_b": 33, "ml_imag_mod": 33, "dft_imag_mod": 33, "associ": [33, 106], "show": [33, 176, 177, 178, 180], "imaginari": [33, 106], "mode": [33, 106, 176, 180], "q_dependent_rms": 34, "k": [34, 82, 85, 105, 110, 111, 112, 142], "which_q_path": 35, "rm": [35, 145, 179], "img_format": 35, "extens": [35, 84, 88], "isolated_atom": [40, 100, 101, 176], "isolated_speci": 40, "e0_spin": [40, 100, 101], "dimer": [40, 100, 101], "dimer_speci": 40, "dimer_rang": [40, 100, 101], "dimer_num": [40, 100, 101], "21": [40, 105, 106, 111, 178], "custom_set": [40, 100, 101], "input": [40, 41, 53, 59, 65, 70, 72, 82, 83, 84, 88, 100, 103, 120, 121, 145, 149, 153, 156, 157, 158, 178], "support": [40, 59, 63, 175, 176, 179], "custom": [40, 101, 103, 115, 137, 177, 178, 182], "handler": 40, "spin": [40, 82, 88, 101], "polar": [40, 82, 85, 88, 101], "consid": [40, 53, 58], "22": [40, 91, 96, 105, 106, 111], "where": [40, 106, 177, 178, 180, 181], "were": [40, 177], "config_typ": [40, 41, 46, 48, 100, 101, 166], "correspond": [40, 46, 101, 156], "same": [40, 75, 82, 85, 88, 101, 148, 153, 155, 156, 158, 175, 176, 178, 179, 180], "length": [40, 82, 85, 91, 94, 96, 101, 155, 158], "generate_training_data_for_test": 41, "bulk_relax_mak": [41, 82, 85, 86, 95, 175], "static_energy_mak": [41, 82, 85, 95, 175], "first": [41, 82, 85, 106, 131, 132, 135, 176, 177, 180], "extend": [41, 178], "histogram": [41, 53, 59, 61], "per": [41, 65, 67, 68, 70, 140, 145, 150, 155, 178, 180], "rescal": 41, "cell_factor": [41, 51], "forcefieldrelaxmak": [41, 85, 95, 175], "train_structure_list": 41, "cell_factor_sequ": 41, "potential_filenam": [41, 175], "50": [41, 100, 105, 107, 111, 176], "relax_cel": [41, 175], "supercell_matrix": [41, 49, 50, 178], "x_min": [41, 51], "x_max": [41, 51], "bin_width": [41, 51], "125": [41, 51], "relax_kwarg": [41, 175], "resiz": [41, 48, 51], "param_file_nam": 41, "quippi": [41, 59], "shape": [41, 75, 106], "dure": [41, 61, 155, 180], "ionic": [41, 47], "matrix3d": [41, 49, 50], "matrix": [41, 49, 50, 85, 96], "axi": [41, 51], "width": [41, 51, 53, 107], "bin": [41, 51, 175, 176], "count": 41, "v": [41, 61, 65, 70, 105, 111, 112, 128, 137, 142, 145, 177], "static_run_and_convert": 41, "convers": 41, "extxyz": [41, 46, 51, 73, 100, 101, 103, 144, 148, 160, 166, 167, 176, 178], "format": [41, 44, 55, 106, 144, 157], "vasp_ref_dir": [44, 46, 64], "test_ratio": [44, 100, 101], "distil": [44, 64, 100, 101, 120, 121, 167, 176], "force_label": [44, 64, 167], "ref_forc": [44, 100, 101, 121, 123, 137, 144, 148, 153, 155, 156, 158, 167, 176], "etup": 44, "suitabl": [44, 176, 177], "fite": 44, "tupl": [44, 95, 106, 107, 110, 128, 131, 135, 137, 140, 144], "vasp_ref_fil": [46, 100, 101], "vasp_ref": [46, 100, 101, 166, 167, 176, 178], "rss_group": [46, 100, 101], "vasp_dir": 46, "mandatori": [46, 107, 153, 158, 179, 181], "dirs_of_vasp": 46, "isol_": [46, 53, 59, 61, 101, 107, 114, 116], "converg": [47, 85, 141, 176, 178], "electron": [47, 82, 85], "job_output": 48, "pkl_file": 48, "convert": [48, 56, 79, 84, 85, 88, 109, 110, 144, 150, 157], "extxyt": 48, "pickl": 48, "string": [48, 55, 56, 59, 61, 62, 63, 72, 82, 85, 109, 149], "obtain": [49, 85], "plotter": 51, "ref_xyz": 51, "strip": 52, "hostnam": 52, "url": [52, 179], "oper": [52, 55], "success": 52, "selection_method": [53, 101], "num_of_select": [53, 101], "bcur_param": [53, 100, 101], "dir": [53, 177, 180], "traj_info": 53, "random_se": [53, 59, 63, 100, 101], "trajectori": [53, 79, 107], "md": [53, 105, 110, 111, 112, 142], "liter": [53, 110], "cur": [53, 59, 61, 63, 100, 101], "bcur": [53, 100], "uniform": 53, "select": [53, 59, 61, 63, 101, 180], "pure": 53, "boltzmann": [53, 58, 59, 61], "flat": [53, 59, 61, 106], "enthalpi": 53, "made": 53, "soap_para": [53, 62], "descriptor": [53, 59, 61, 62, 63, 72], "l_max": [53, 158, 176], "degre": [53, 82, 85, 110, 153, 155], "spheric": [53, 155], "harmon": [53, 82, 85, 155], "n_max": [53, 176], "radial": [53, 155, 158], "basi": [53, 158], "atom_sigma": [53, 176], "gaussian": [53, 82, 88], "smear": [53, 82, 88], "75": [53, 105, 106, 111, 137], "cutoff_transition_width": [53, 176], "transit": 53, "region": [53, 136], "zeta": [53, 176], "expon": [53, 59, 61, 63], "dot": [53, 59], "kernel": [53, 59, 61, 63], "averag": [53, 71, 97, 140], "vector": [53, 61, 63, 72, 157], "kt": [53, 58, 59, 61, 101], "temperatur": [53, 58, 59, 61], "ev": [53, 59, 61, 137, 177], "weight": [53, 59, 61, 124, 156], "frac_of_bcur": 53, "fraction": [53, 59, 61, 130, 132, 137], "bolt_max_num": [53, 59, 61], "3000": [53, 59, 61, 176], "kernel_exp": [53, 59, 61, 63], "energy_label": [53, 59, 61], "label": [53, 59, 61, 64, 65, 70, 86, 120, 121, 146, 157, 167, 176], "union": 53, "traj_path": 53, "pressur": [53, 59, 107], "boltzhist_cur": 53, "These": [53, 59, 106], "copi": [53, 59, 180], "extract": [55, 66, 113, 146, 175], "uniqu": 55, "chemic": [55, 70], "element": [55, 61, 106, 121, 123, 128, 132, 148, 153, 158], "pair": [55, 113, 143], "retriev": [55, 180], "get_speci": 55, "find_element_pair": 55, "symb_list": 55, "symbol": [55, 68, 70], "get_number_of_speci": 55, "present": 55, "among": 55, "get_species_z": 55, "006241509125883258": [56, 109], "emin": [58, 137], "constant": [58, 59, 61, 82, 85, 110], "exp": [58, 100, 107], "bolt_frac": [59, 61], "cur_num": [59, 61], "100": [59, 61, 91, 94, 96, 100, 105, 107, 111, 177], "p": [59, 105, 111, 112, 121, 123, 128, 142], "sampl": [59, 61, 100, 101, 178, 180], "accord": [59, 61, 82, 85, 177], "divers": [59, 61], "flatten": [59, 106], "control": [59, 61, 103, 156, 176, 177, 178, 180], "optim": [59, 85, 121, 123], "gpa": 59, "most": [59, 176], "algorithm": [59, 82, 85, 177], "combin": [59, 120, 121, 176, 177, 178], "adapt": [59, 63, 65, 70, 73, 75, 82, 88, 110, 155, 166, 176], "titl": [59, 63, 65, 70, 73, 110, 155], "de": [59, 63, 175, 176, 177, 178, 182], "novo": [59, 63], "explor": [59, 63], "self": [59, 63], "surfac": [59, 63], "script": [59, 63, 153, 156, 158, 161, 166, 175, 177, 182], "select_enthalpy_flat_histogram": 59, "author": [59, 63, 110, 155], "noam": [59, 63], "bernstein": [59, 63], "g\u00e1bor": [59, 63], "cs\u00e1nyi": [59, 63], "l": [59, 63], "11": [59, 63, 105, 106, 111], "2019": [59, 63], "avail": [59, 63, 82, 85, 110, 120, 121, 122, 155, 178, 180], "www": [59, 63, 179], "cam": [59, 63, 179], "uk": [59, 63, 179], "item": [59, 63, 106], "3aff252b": [59, 63], "a583": [59, 63], "4e7c": [59, 63], "afc9": [59, 63], "9dc1540cc37e": [59, 63], "licens": [59, 63, 110, 155], "attribut": [59, 63, 106], "intern": [59, 63, 85], "cc": [59, 63], "after": [60, 101, 106, 153, 156, 158, 167, 177, 179, 180, 181], "aren": 60, "t": [60, 105, 106, 111, 112, 142, 178, 180], "close": [60, 178], "suffici": [60, 177], "space": [60, 76, 85, 178], "pairwis": [60, 143], "ref_energi": [61, 100, 101, 121, 123, 137, 144, 148, 153, 155, 156, 158, 176], "element_ord": [61, 130, 132, 133, 137], "scheme": [61, 82, 85, 137], "linear": [61, 128, 129, 134, 137, 153, 176, 179], "hull": [61, 126, 127, 128, 129, 130, 133, 136, 137, 159], "rel": 61, "convex": [61, 126, 127, 128, 129, 130, 133, 136, 137, 159], "proport": [61, 101], "kept": 61, "quip": [61, 63, 72, 165, 176], "order": [61, 106, 130, 132, 133, 137, 153, 156, 158, 175, 176, 179, 181], "2d": [61, 135, 137], "vari": [61, 176], "stoichiometri": [61, 133, 137], "3d": [61, 126, 130, 137], "mole": [61, 130, 132, 137, 150], "todo": [61, 106, 137], "generalis": 61, "nd": [61, 105, 111, 112, 127, 136, 142], "mcp": 61, "gst": 61, "n_speci": 62, "species_z": 62, "repres": [62, 63, 106, 155], "z": 62, "selected_descriptor": [63, 72], "select_num": 63, "stochast": 63, "select_by_descriptor": 63, "atoms_distil": 64, "in_fil": [65, 67, 68, 70, 145], "out_fil": [65, 66, 67, 68, 70], "ax": [65, 70], "adjust": [65, 70, 73, 75, 85, 110, 176, 177, 178], "libatom": [65, 70, 73, 75], "page": [65, 70, 73, 75, 177], "io": [65, 70, 73, 75, 166], "gap_fitting_tutori": [65, 70, 73, 75], "html": [65, 70, 71, 73, 75, 155, 166], "simpl": [65, 70, 73, 75, 128, 177], "emt": [65, 70, 73, 75], "panel": [65, 70], "posit": [65, 70, 86, 110, 177, 178], "subplot": [65, 70], "legend": [65, 70], "filenam": [66, 79, 84, 88, 165], "is_out": 66, "manipul": 66, "quip_": 66, "criteria": [67, 68, 178, 180], "0005": 67, "filter": [67, 68, 73, 121, 176, 177, 180], "outlier": [67, 68, 177], "threshold": [67, 68, 176, 177], "si": [68, 70, 103, 105, 111, 112, 142, 182], "atomi": 68, "atoms_object": [69, 147], "recurs": [69, 147], "exclud": [69, 101, 147, 177], "003": 71, "draw": [71, 177, 178], "trial": 71, "penalis": 71, "lead": [71, 180], "veri": [71, 85, 153, 176, 179, 180], "hiphiv": 71, "materialsmodel": 71, "org": [71, 121, 179], "moduleref": 71, "highlight": [71, 180], "generate_mc_rattled_structur": 71, "more": [71, 106, 123, 176, 177, 178, 180, 181], "b": [71, 105, 111, 112, 142, 175], "connect": [71, 175, 176, 177, 180], "final": [71, 85, 176, 177], "probabl": [71, 180], "move": [71, 106, 180], "hyper": [72, 163], "info": [72, 128, 129, 130, 133, 137, 180], "descriptor_vec": 72, "energy_limit": [73, 177], "force_limit": [73, 177], "species_list": [73, 121, 123, 148, 176], "train_nam": [73, 148, 160, 167], "test_nam": [73, 148, 160, 167], "x_ref": 75, "x_pred": 75, "predict": [75, 155], "np": [75, 105, 106, 111, 112, 129, 133, 142, 159], "ndarrai": [75, 106, 133, 134, 159], "std": 75, "stretch": 76, "compress": 76, "equal": 76, "ASE": [77, 79, 85, 110, 143], "train_structur": 78, "test_structur": 78, "traj_obj": 79, "traj": 79, "store_magmom": 79, "magnet": 79, "moment": 79, "sym_reduc": [82, 85], "min_length": [82, 85, 91, 94, 96, 175, 177, 178], "20": [82, 85, 103, 105, 111, 137, 156, 178], "max_length": [82, 85, 91, 94, 96, 177], "30": [82, 105, 111], "prefer_90_degre": [82, 85], "allow_orthorhomb": [82, 85, 91, 96], "get_supercell_size_kwarg": [82, 85], "use_symmetrized_structur": [82, 85], "born_mak": [82, 85], "create_thermal_displac": [82, 85], "generate_frequencies_eigenvectors_kwarg": [82, 85, 175], "kpath_schem": [82, 85], "seekpath": [82, 85], "store_force_const": [82, 85, 175], "off": [82, 88, 176, 178], "reduc": [82, 85, 91, 96, 132], "deform": [82, 85], "1e": 82, "try": [82, 85], "get_supercell_s": [82, 85], "size": [82, 85, 91, 94, 96, 106, 156, 158, 177, 178], "enforc": [82, 85], "setyawan": [82, 85], "curtarolo": [82, 85], "2010": [82, 85], "challeng": [82, 85], "scienc": [82, 85], "49": [82, 85, 105, 111], "299": [82, 85], "312": [82, 85], "doi": [82, 85], "1016": [82, 85], "j": [82, 85, 121, 123, 176, 178, 180], "commatsci": [82, 85], "010": [82, 85], "certain": [82, 85, 176, 177, 178], "definit": [82, 85], "tight": [82, 85, 95], "skip": [82, 85, 95, 106, 180], "born": [82, 85], "charg": [82, 85], "generate_frequencies_eigenvector": [82, 85, 175, 180], "thermal_displacement_matric": [82, 85], "kpoint": [82, 85], "awar": [82, 85], "kind": [82, 85, 176], "hinuma": [82, 85], "setyawan_curtarolo": [82, 85], "latimer_munro": [82, 85], "relationship": [82, 85], "implement": [82, 85, 86], "might": [82, 85, 86, 176, 177, 180], "enabl": [82, 85, 86, 156, 179], "isolatedatomenergymak": 83, "all_speci": 83, "input_set_gener": [84, 88, 178, 180], "write_input_set_kwarg": [84, 88], "copy_vasp_kwarg": [84, 88], "run_vasp_kwarg": [84, 88], "task_document_kwarg": [84, 88], "stop_children_kwarg": [84, 88], "write_additional_data": [84, 88], "vaspinputgener": [84, 88], "write_vasp_input_set": [84, 88], "copy_vasp_output": [84, 88], "run_vasp": [84, 88], "taskdoc": [84, 88], "from_directori": [84, 88], "should_stop_children": [84, 88], "addit": [84, 88, 101, 176, 177], "firework": [84, 88, 177, 181], "charact": [84, 88], "typic": [84, 88, 128, 129, 130, 133], "denot": [84, 88], "my_fil": [84, 88], "txt": [84, 88, 175, 177], "content": [84, 88], "001": [85, 137, 176], "forcefield": [85, 175], "field": 85, "subsequ": [85, 177], "With": [85, 177], "dynam": 85, "correct": [85, 175, 176], "effect": [85, 103], "suppli": 85, "densiti": [85, 150], "thermodynam": 85, "heavili": 85, "recommend": [85, 110, 177, 181], "symmetr": 85, "detect": 85, "mani": [85, 106, 177], "here": [85, 106, 175, 176, 177, 180, 181], "enough": [85, 110, 177], "make_from_ml_model": 85, "potential_fil": 85, "calculator_kwarg": [85, 95, 175], "make_kwarg": 85, "nearli": 85, "_wo_sigma": 85, "_phonon": 85, "_rand_struc": 85, "randomstruturesdatageneratorforml": 86, "addition": [86, 179], "phonondisplacementmak": 88, "18": [91, 94, 96, 105, 111, 175, 177], "fallback_min_length": [91, 94, 96, 177], "12": [91, 96, 105, 111, 176], "min_atom": [91, 94, 96, 177], "max_atom": [91, 94, 96, 177], "500": [91, 94, 96, 175, 177], "step_siz": [91, 96], "reach": [91, 94, 96], "fallback": [91, 94, 96], "except": [91, 94, 96], "increas": [91, 96, 156], "force_90_degre": [91, 96], "multipli": [91, 96], "prevent": [91, 96], "search": [91, 96, 101, 107], "reduced_supercell_s": 91, "call": [91, 123, 176], "structure_nam": 94, "25": [94, 105, 111, 176, 177], "toler": [94, 107, 177], "print": [94, 176, 177, 180], "log": [94, 155, 164, 180], "regard": 94, "match": [94, 110], "prepar": [95, 160, 177], "lattic": [97, 175, 177], "struct_numb": [100, 101, 103], "10000": [100, 101, 175, 176], "tag": [100, 101, 103, 178, 180], "gesb2te4": [100, 101], "selection_method1": 100, "selection_method2": 100, "num_of_selection1": 100, "num_of_selection2": 100, "200": [100, 101], "mlip_typ": [100, 101, 107, 114, 116, 121, 123, 176], "mlip_hyp": [100, 101], "ref_energy_nam": [100, 101, 121, 123, 144, 148, 153, 155, 156, 158], "ref_force_nam": [100, 101, 121, 123, 144, 148, 153, 155, 156, 158], "ref_virial_nam": [100, 101, 121, 123, 144, 148, 153, 155, 156, 157, 158], "ref_viri": [100, 101, 121, 123, 137, 144, 148, 153, 155, 156, 158, 176], "num_processes_fit": [100, 101, 121, 123, 148, 153, 161, 162, 165, 176], "scalar_pressure_method": [100, 107, 114, 116], "scalar_exp_pressur": [100, 107, 114, 116], "scalar_pressure_exponential_width": [100, 107, 114, 116], "scalar_pressure_low": [100, 107, 114, 116], "scalar_pressure_high": [100, 107, 114, 116], "max_step": [100, 107, 114, 116], "force_tol": [100, 107, 114, 116], "stress_tol": [100, 107, 114, 116], "hookean_repul": [100, 107, 114, 116], "write_traj": [100, 107, 114, 116], "num_processes_rss": [100, 107, 114], "devic": [100, 107, 114, 116, 121, 123, 155, 156, 158, 176], "cpu": [100, 107, 121, 123, 155, 156, 158], "stop_criterion": 100, "max_iteration_numb": 100, "accuraci": 100, "involv": [100, 143, 177, 180], "scratch": 101, "job1": [101, 180], "randomizedstructur": 101, "job2": [101, 180], "subset": [101, 176], "job3": 101, "dftstaticmak": 101, "job4": 101, "vasp_collect_data": 101, "job5": 101, "data_preprocess": 101, "job6": 101, "mlipfitmak": [101, 176], "appli": [101, 107], "virial": [101, 115, 121, 123, 137, 144, 148, 153, 155, 156, 157, 158], "test_error": [101, 141, 148, 153, 155, 156, 158], "mlip_path": [101, 107, 114, 116, 160, 177], "current_it": 101, "index": [101, 107, 114], "build_random_cel": 103, "output_file_nam": [103, 114, 116], "random_struct": 103, "remove_tmp_fil": 103, "buildcell_opt": 103, "cell_seed_path": 103, "num_process": 103, "32": [103, 105, 106, 111, 123, 148, 153, 176], "expect": [103, 177], "builcel": 103, "input_file_nam": 103, "remov": [103, 110, 177], "temporari": 103, "rais": [103, 153, 158, 179], "end": [103, 177, 182], "longer": 103, "89": [105, 106, 111], "ag": [105, 111, 112, 142], "47": [105, 106, 111], "al": [105, 111, 112, 142], "13": [105, 111], "am": [105, 111, 112, 142], "As": [105, 111, 112, 142, 177, 178], "33": [105, 111, 176], "At": [105, 111, 112, 142, 177], "85": [105, 111], "au": [105, 111, 112, 142], "79": [105, 111], "ba": [105, 111, 112, 142], "56": [105, 111], "Be": [105, 111, 112, 142], "bh": [105, 111, 112, 142], "107": [105, 111], "bi": [105, 111, 112, 142], "83": [105, 111], "bk": [105, 111, 112, 142], "97": [105, 111], "br": [105, 111, 112, 142], "35": [105, 111], "6": [105, 106, 111, 176, 179, 180], "ca": [105, 111, 112, 142], "48": [105, 106, 111, 175, 176], "ce": [105, 111, 112, 142], "58": [105, 106, 111], "cf": [105, 111, 112, 142], "cl": [105, 111, 112, 142, 175, 176], "17": [105, 111], "cm": [105, 111, 112, 142], "96": [105, 106, 111], "cn": [105, 111, 112, 142], "112": [105, 111], "co": [105, 111, 112, 142], "27": [105, 111], "cr": [105, 111, 112, 142], "24": [105, 106, 111], "55": [105, 111], "cu": [105, 111, 112, 142], "29": [105, 111], "db": [105, 111, 112, 142], "105": [105, 111, 178], "d": [105, 111, 112, 136, 142], "110": [105, 111], "dy": [105, 111, 112, 142], "66": [105, 106, 111], "er": [105, 111, 112, 142], "68": [105, 111], "eu": [105, 111, 112, 142], "63": [105, 111], "f": [105, 106, 111, 112, 142, 177], "fe": [105, 111, 112, 142], "26": [105, 106, 111], "fl": [105, 111, 112, 142], "114": [105, 111], "fm": [105, 111, 112, 142], "fr": [105, 111, 112, 142], "87": [105, 106, 111], "ga": [105, 111, 112, 142], "31": [105, 106, 111], "gd": [105, 111, 112, 142], "64": [105, 106, 111, 176], "ge": [105, 111, 112, 142], "h": [105, 111, 112, 142, 180], "he": [105, 111, 112, 142], "hf": [105, 111, 112, 142], "72": [105, 111], "hg": [105, 111, 112, 142], "80": [105, 111], "ho": [105, 111, 112, 142], "67": [105, 111], "108": [105, 111], "53": [105, 106, 111], "ir": [105, 111, 112, 142], "77": [105, 111], "19": [105, 106, 111], "kr": [105, 111, 112, 142], "36": [105, 106, 111], "la": [105, 111, 112, 142], "57": [105, 106, 111], "li": [105, 111, 112, 142, 175, 176], "lr": [105, 111, 112, 142], "103": [105, 111], "lu": [105, 111, 112, 142], "71": [105, 106, 111], "lv": [105, 111, 112, 142], "116": [105, 111], "115": [105, 111], "101": [105, 111], "mg": [105, 111, 112, 142], "mn": [105, 111, 112, 142], "mo": [105, 111, 112, 142], "mt": [105, 111, 112, 142], "109": [105, 111], "7": [105, 106, 111, 155, 179], "na": [105, 111, 112, 142], "nb": [105, 111, 112, 142], "41": [105, 106, 111], "60": [105, 111], "ne": [105, 111, 112, 142], "nh": [105, 111, 112, 142], "113": [105, 111], "ni": [105, 111, 112, 142], "28": [105, 106, 111], "No": [105, 106, 111, 112, 142], "102": [105, 111], "93": [105, 111], "o": [105, 111, 112, 142, 175, 176, 179], "og": [105, 111, 112, 142], "118": [105, 111], "76": [105, 106, 111], "15": [105, 106, 111, 177], "pa": [105, 111, 112, 142], "91": [105, 111], "pb": [105, 111, 112, 142, 180], "82": [105, 111], "pd": [105, 111, 112, 142], "46": [105, 106, 111], "pm": [105, 111, 112, 142], "61": [105, 111], "po": [105, 111, 112, 142], "84": [105, 106, 111], "pr": [105, 111, 112, 142], "59": [105, 111], "pt": [105, 111, 112, 142], "78": [105, 111], "pu": [105, 111, 112, 142], "94": [105, 106, 111], "ra": [105, 111, 112, 142], "88": [105, 111], "rb": [105, 111, 112, 142], "37": [105, 111], "re": [105, 111, 112, 142], "rf": [105, 111, 112, 142], "104": [105, 111], "rg": [105, 111, 112, 142], "111": [105, 111], "rh": [105, 111, 112, 142], "45": [105, 106, 111], "rn": [105, 111, 112, 142], "86": [105, 111], "ru": [105, 111, 112, 142], "44": [105, 106, 111], "16": [105, 106, 111, 130, 132, 133, 137, 175], "sb": [105, 111, 112, 142], "51": [105, 106, 111], "sc": [105, 111, 112, 142], "se": [105, 111, 112, 142, 180], "34": [105, 111], "sg": [105, 111, 112, 142], "106": [105, 111], "14": [105, 111, 137], "sm": [105, 111, 112, 142], "62": [105, 106, 111], "sn": [105, 111, 112, 142], "sr": [105, 111, 112, 142], "38": [105, 106, 111], "ta": [105, 111, 112, 142], "73": [105, 111], "tb": [105, 111, 112, 142, 176], "65": [105, 111], "tc": [105, 111, 112, 142], "43": [105, 111], "te": [105, 111, 112, 142], "52": [105, 111], "th": [105, 111, 112, 142], "ti": [105, 111, 112, 142], "tl": [105, 111, 112, 142], "81": [105, 111], "tm": [105, 111, 112, 142], "69": [105, 106, 111], "117": [105, 111], "u": [105, 111, 112, 142], "92": [105, 106, 111], "74": [105, 111], "xe": [105, 111, 112, 142], "54": [105, 106, 111], "y": [105, 111, 112, 131, 142, 180], "39": [105, 106, 111], "yb": [105, 111, 112, 142], "70": [105, 111], "zn": [105, 111, 112, 142], "zr": [105, 111, 112, 142], "arrai": [106, 129, 132, 137, 159], "07": [106, 110], "06": 106, "03": [106, 177], "04": 106, "multidimension": 106, "homogen": 106, "fix": [106, 176], "byte": 106, "occupi": 106, "integ": [106, 180], "someth": 106, "etc": [106, 180], "zero": 106, "empti": [106, 112, 142, 153, 158, 180], "also": [106, 176, 177, 178, 179, 180], "section": [106, 174, 176, 177, 180], "low": [106, 107], "instanti": [106, 180], "examin": 106, "__new__": 106, "dtype": 106, "interpret": 106, "buffer": 106, "expos": 106, "fill": 106, "offset": 106, "stride": 106, "row": 106, "major": 106, "style": [106, 113], "column": 106, "fortran": 106, "transpos": 106, "flag": 106, "c_contigu": 106, "owndata": 106, "writeabl": 106, "flatit": 106, "version": [106, 110, 155, 176, 179], "assign": 106, "part": [106, 172, 175, 178, 179], "real": 106, "items": 106, "nbyte": 106, "ndim": 106, "dimens": [106, 136], "contigu": 106, "int16": 106, "jump": 106, "time": [106, 178], "ctype": 106, "interact": [106, 153, 155, 158, 180], "view": 106, "anoth": [106, 131, 175, 176], "unless": 106, "actual": 106, "leav": 106, "alloc": 106, "unchang": 106, "garbag": 106, "alia": 106, "r": 106, "There": [106, 176, 178], "__init__": 106, "becaus": [106, 176, 180], "illustr": 106, "constructor": [106, 112, 142], "0e": [106, 176], "000": 106, "nan": 106, "5e": [106, 175], "323": 106, "second": [106, 131, 135, 177], "int_": 106, "iteration_index": 107, "hookean_para": [107, 114, 116], "sandom": 107, "choos": [107, 121, 123, 180], "nequip": [107, 121, 123, 156, 158, 164, 182], "m3gnet": [107, 121, 123, 155, 182], "mace": [107, 121, 123, 156, 157, 163, 182], "scalar": 107, "exponenti": 107, "stress": [107, 144, 155], "hookean": 107, "repuls": 107, "cuda": [107, 121, 123, 155, 156, 158, 176], "a1": [110, 131], "a2": [110, 131], "rt": 110, "fixconstraint": 110, "constrain": 110, "softli": 110, "intend": 110, "earli": 110, "crash": 110, "due": 110, "overlap": 110, "calibr": 110, "spring": 110, "guarante": [110, 178], "constraint": 110, "either": [110, 176], "soft": 110, "explod": 110, "strong": [110, 177], "ask": [110, 180], "hjorth": 110, "larsen": 110, "lgplv2": 110, "get_removed_dof": 110, "freedom": 110, "todict": 110, "adjust_posit": 110, "newposit": 110, "noth": 110, "adjust_momenta": 110, "momenta": 110, "adjust_forc": 110, "adjust_potential_energi": 110, "quantiti": 110, "get_indic": 110, "index_shuffl": 110, "ind": 110, "mutabl": [112, 142], "sequenc": [112, 142], "ace_label": 113, "ace_json": 113, "ace_t": 113, "coeffici": 113, "lammp": 113, "input_structur": 114, "args_str": [115, 175], "pot1": 115, "pot2": 115, "param_str": 115, "param_filenam": [115, 175], "calculation_always_requir": 115, "calc_arg": 115, "add_arrai": 115, "add_info": 115, "thread": [116, 161, 162, 165], "data_preprocessing_for_fit": [120, 177], "data_typ": [120, 121, 166], "mix": [120, 175], "mlpotentialfit": 121, "hyper_param_optim": [121, 123], "xpot": 121, "pub": 121, "aip": 121, "jcp": 121, "articl": 121, "159": 121, "024803": 121, "2901815": 121, "isolated_atoms_energi": [121, 123, 130, 133, 137, 153, 158, 176], "glue_xml": [121, 123, 148, 160, 165, 176], "database_dir": [121, 123, 160], "glue": [121, 123, 148, 160, 176], "core": [121, 123, 148, 160, 176, 177, 178, 180], "instead": [121, 123, 148, 160, 176], "hpo": 123, "points_3d": 126, "points_nd": 127, "energy_nam": [128, 129, 130, 133, 137], "lower_half_hull_point": 128, "lower": [128, 176], "half": 128, "choic": [130, 132, 133, 137, 176], "mos2": [130, 132, 133, 137], "b1": 131, "b2": 131, "intersect": 131, "line": [131, 177], "x2": 132, "x3": 132, "sum": 132, "atoms_list": [133, 144], "coordin": [133, 135], "atomic_numb": [133, 151], "val": [134, 178], "piecewis": 134, "p1": 135, "p2": 135, "p3": 135, "pn": [135, 136], "triangl": 135, "third": [135, 177], "preg": 136, "hyperplan": 136, "littl": 136, "against": [136, 177], "reg_minmax": 137, "force_nam": 137, "virial_nam": 137, "max_energi": 137, "config_type_overrid": 137, "regularis": 137, "amongst": 137, "thing": 137, "sure": [137, 175, 179, 180, 181], "full": [137, 180], "multi": 137, "reg": 137, "linear_hul": 137, "composit": 137, "163": 137, "sio2": 137, "ignor": [137, 178, 180], "greater": 137, "than": [137, 156, 177], "0316": 137, "316": 137, "0632": 137, "632": 137, "emax": 137, "semin": 137, "semax": 137, "sfmin": 137, "sfmax": 137, "ssvmin": 137, "svmax": 137, "atoms_db": 140, "e_nam": 140, "triplet": [140, 143], "Ase": 140, "energy_parameter_nam": [140, 176], "es_var": 140, "avg_neigh": 140, "within": 143, "include_forc": 144, "include_stress": [144, 155, 176], "xml_file_path": 146, "boolean": 147, "db_dir": [148, 153, 155, 156, 158], "mlip_phonon_defaults_file_path": 148, "valid": [148, 155, 176, 179], "train_error": [148, 153, 155, 156, 158], "gap_parameter_dict": 149, "include_two_bodi": 149, "include_three_bodi": 149, "include_soap": 149, "bodi": [149, 155], "three": [149, 155, 177], "gcm3": 150, "mr": [150, 180], "n_atom": 150, "vm": 150, "gram": 150, "cubic": 150, "centimet": 150, "cm\u00b3": 150, "molar": 150, "mass": 150, "mol": 150, "formula": 150, "flow_output": 152, "vasp_calc_dir": 152, "phonondftmldatagenerationflow": 152, "mlip_rss_defaults_file_path": [153, 155, 156, 158], "cluster": [153, 176, 177, 181], "expans": 153, "locat": [153, 155, 156, 158], "map": [153, 158], "totaldegre": [153, 176], "polynomi": 153, "solver": [153, 176], "blr": [153, 176], "bayesian": 153, "regress": 153, "larg": [153, 167, 176, 177], "estim": [153, 177], "problem": [153, 177], "lsqr": 153, "valueerror": [153, 158], "mlip_fit_parameter_file_path": 154, "load": [154, 175, 180], "exp_nam": 155, "experi": 155, "checkpoint": 155, "results_dir": 155, "radiu": [155, 156, 158], "threebody_cutoff": [155, 176], "batch_siz": [155, 156, 158, 176], "batch": [155, 156, 158, 180], "max_epoch": [155, 176], "epoch": [155, 156], "tensor": 155, "hidden_dim": [155, 176], "dimension": 155, "hidden": [155, 158], "layer": [155, 156, 158], "num_unit": [155, 176], "dens": 155, "max_l": [155, 176], "max_n": [155, 176], "test_equal_to_v": [155, 176], "path_to_fitted_model": 155, "graph": [155, 177], "matgl": 155, "tsz": 155, "ko": 155, "chi": 155, "chen": 155, "shyue": 155, "ping": 155, "ong": 155, "ai": 155, "2ftrain": 155, "20a": 155, "20m3gnet": 155, "20potenti": 155, "20with": 155, "20pytorch": 155, "20lightn": 155, "claus": 155, "config_type_weight": [156, 176], "hidden_irrep": [156, 176], "r_max": [156, 158, 176], "start_swa": [156, 176], "swa": 156, "last": 156, "correl": [156, 176], "induc": 156, "default_dtyp": [156, 158, 176], "float32": [156, 158, 176], "float64": [156, 158], "out_file_nam": 157, "3x3": 157, "recogniz": 157, "num_lay": [158, 176], "block": 158, "irrep": 158, "rotat": 158, "network": 158, "featur": [158, 176], "num_featur": [158, 176], "num_basi": [158, 176], "invariant_lay": [158, 176], "invariant_neuron": [158, 176], "neuron": 158, "learning_r": [158, 176], "rate": 158, "all_point": 159, "hull_point": 159, "cwd": 160, "script_nam": 161, "log_prefix": 164, "along": 164, "differenti": 164, "data_path": 165, "xml_file": 165, "path_to_vasp_static_calc": 166, "pars": 166, "vasprun": 166, "outcar": 166, "read": 166, "lipai": 166, "ml_script": 166, "outcar2xyz": 166, "track": 166, "vasp_ref_nam": 167, "reject": 167, "entri": [167, 176, 177, 180], "mlip_fit": [172, 176], "overview": [174, 177], "worri": [175, 180], "about": [175, 177], "lot": 175, "crucial": [175, 180], "interest": [175, 176], "mp_api": [175, 176, 177, 180], "client": [175, 176, 177, 180], "import": [175, 176, 177, 178, 180], "mprester": [175, 176, 177, 180], "completedftvsmlbenchmarkworkflow": [175, 176, 177, 178], "schema": 175, "monti": 175, "serial": 175, "loadfn": 175, "mpr": [175, 176, 177], "api_kei": [175, 176, 177, 180], "your_mp_api_kei": [175, 176, 177, 180], "benchmark_structure_list": [175, 176, 177, 178], "mpid": [175, 176, 177, 178, 180], "22905": [175, 177], "mpbenchmark": [175, 176, 177, 178], "dft_data": 175, "ref": 175, "phononbsdosdoc_mp_22905": 175, "get_structure_by_material_id": [175, 176, 177, 180], "mpbm": [175, 176, 177], "bm_structur": [175, 177], "complete_flow": [175, 176, 177, 178], "results_xi": 175, "templat": 175, "usr": [175, 176], "gaprelaxmak": 175, "gapstaticmak": 175, "phononbenchmarkmak": 175, "write_benchmark_metr": [175, 177], "jobflow": [175, 176, 177, 181], "run_loc": [175, 176], "omp_num_thread": [175, 176], "openblas_num_thread": [175, 176], "job_stor": [175, 176], "your_api_kei": 175, "phojob": 175, "ip": 175, "interv": [175, 178], "fmax": 175, "00001": 175, "thz": [175, 177], "bm": 175, "comp_bm": 175, "create_fold": [175, 176], "mongodb": [175, 177, 180, 181], "jsanit": 175, "dumpfn": 175, "queri": 175, "uuid": 175, "put": [175, 176, 177], "del": 175, "_id": [175, 180], "monty_encoded_json_doc": 175, "allow_bson": 175, "enum_valu": 175, "And": [175, 180], "abc": 175, "061019144638489": 175, "129": 175, "63251308285152": 175, "3e": 175, "8e": 175, "pbc": 175, "periodicsit": 175, "4e": 175, "531": 175, "signific": 176, "influenc": 176, "node": [176, 177, 180], "categori": 176, "concern": 176, "affect": 176, "regardless": 176, "principl": 176, "turn": [176, 177], "strongli": 176, "further": [176, 178], "shown": [176, 177], "demonstr": [176, 177, 178, 182], "\u2139": [176, 177, 178], "comprehens": [176, 177, 181], "wil": 176, "found": [176, 178, 180], "chem": [176, 178], "phy": [176, 178], "153": [176, 178], "044104": [176, 178], "2020": [176, 178], "bound": [176, 180], "taken": 176, "account": 176, "let": 176, "decid": [176, 178], "6000": 176, "9000": 176, "default_sigma": 176, "two_bodi": 176, "three_bodi": 176, "twob": 176, "threeb": 176, "overwritten": 176, "snippet": 176, "at_fil": 176, "force_parameter_nam": 176, "virial_parameter_nam": 176, "gp_file": 176, "prefer": 176, "acepotenti": [176, 179], "jl": 176, "distinct": 176, "procedur": 176, "005": [176, 177], "similar": [176, 177, 178, 180], "128": 176, "again": 176, "128x0e": 176, "128x1o": 176, "max_num_epoch": 176, "1500": 176, "1200": 176, "ema_decai": 176, "huber": 176, "submit": [176, 177], "allotrop": 176, "jobflow_remot": [176, 177, 180], "remot": [176, 177, 181], "submit_flow": [176, 177, 180], "struc_list": 176, "149": [176, 177], "struc": 176, "bm_struc": 176, "autoplex_flow": [176, 177], "7000": 176, "8000": 176, "central_weight": 176, "f0": 176, "covariance_typ": 176, "dot_product": 176, "sparse_method": 176, "cur_point": 176, "sparse_jitt": 176, "autoplex_wf": 176, "worker": [176, 177], "autoplex_work": [176, 177], "sole": 176, "manag": [176, 180, 181, 182], "chdir": 176, "destin": 176, "fit_input_dict": 176, "marker": 176, "rand_struc_dir": 176, "phonon_dir": 176, "phonon_data": 176, "iso_atoms_dir": 176, "28649227": 176, "25638457": 176, "pre_databas": 176, "least": 176, "finish": [176, 177], "successfulli": 176, "carefulli": 177, "treat": 177, "so": [177, 178], "check_supercel": 177, "download": 177, "165": 177, "168": 177, "16220": 177, "571520": 177, "971661": 177, "971662": 177, "999200": 177, "1072544": 177, "1079297": 177, "1095269": 177, "1200830": 177, "1203790": 177, "yourself": 177, "computation": 177, "\u00e5": [177, 178], "conveni": 177, "rough": 177, "dftsupercellsettingsmak": 177, "undisplac": 177, "ones": 177, "1185319": 177, "licl": 177, "dft_supercell_check_flow": 177, "supercomput": 177, "smaller": 177, "go": 177, "rocksalt": 177, "rememb": 177, "person": 177, "Of": 177, "diagram": [177, 178], "suppos": 177, "get_iso_atom": 177, "dft_phonopy_gen_data": [177, 178], "dft_random_gen_data": [177, 178], "few": [177, 180], "machine_learning_fit": 177, "complete_benchmark": 177, "what": [177, 180], "wa": 177, "mermaid": 177, "submiss": 177, "to_mermaid": 177, "graph_sourc": 177, "show_flow_box": 177, "past": 177, "live": 177, "onlin": 177, "flowchart": 177, "editor": 177, "easi": 177, "everi": 177, "aspect": 177, "instruct": [177, 181], "storag": [177, 181], "flexibl": [177, 181], "launchpad": 177, "flow_to_workflow": 177, "wf": 177, "lpad": 177, "auto_load": 177, "add_wf": 177, "set_run_config": [177, 180], "directli": 177, "partit": [177, 180], "00": [177, 178, 180], "ntask": [177, 180], "qverbatim": [177, 180], "sbatch": [177, 180], "mail_us": [177, 180], "your_email": [177, 180], "adress": [177, 180], "mail_typ": [177, 180], "slurm": [177, 180], "conda": [177, 180], "resources_phon": 177, "resources_ratt": 177, "micro": 177, "resources_mlip": 177, "name_filt": 177, "diagnost": 177, "0049634": 177, "0023569": 177, "catch": 177, "inconsist": 177, "doe": 177, "feedback": [177, 180], "results_licl": 177, "essenti": 177, "imagmod": 177, "pot": 177, "57608": 177, "explain": 178, "behind": 178, "stem": 178, "robust": 178, "crystallin": 178, "routin": 178, "period": 178, "boundari": 178, "displacement_list": 178, "By": [178, 182], "tune": 178, "those": 178, "achiev": 178, "pre_xyz_train": 178, "pre_xyz_test": 178, "equip": 178, "dftphononmak": 178, "inherit": 178, "individu": [178, 179], "stddev": 178, "undistort": 178, "scale_factor": 178, "_": 178, "five": 178, "explicitli": 178, "don": 178, "evenli": 178, "around": 178, "counterpart": 178, "randomstructuresdatagener": 178, "varieti": 178, "tightdftstaticmak": 178, "pbesol": 178, "gga": 178, "geometri": 178, "tightrelaxmak": 178, "staticsetgener": 178, "example_input_set": 178, "user_kpoints_set": 178, "grid_dens": 178, "user_incar_set": [178, 180], "algo": [178, 180], "ibrion": 178, "ispin": 178, "ismear": 178, "incar": [178, 180], "pe": 178, "pbe": 178, "static_isolated_atom_mak": 178, "bulk_rattled_mak": 178, "bulk_phonon_mak": 178, "keep": [178, 180], "jointli": 179, "berlin": 179, "oxford": 179, "evolv": 179, "remain": 179, "pull": 179, "request": 179, "review": 179, "integr": 179, "main": 179, "branch": 179, "begin": 179, "care": 179, "abl": [179, 181, 182], "vasp_incar_upd": [179, 181], "npar": [179, 180, 181], "divisor": [179, 181], "navig": 179, "gitlab": 179, "aae51d57721847624cea569f3a2d4bb6aa5032b4": 179, "v1": 179, "curl": 179, "fssl": 179, "julialang": 179, "sh": 179, "channel": 179, "termin": 179, "pkg": 179, "registri": 179, "registryspec": 179, "acesuit": 179, "aceregistri": 179, "packagespec": 179, "datafram": 179, "csv": 179, "airss": 179, "mtg": 179, "msm": 179, "tgz": 179, "tar": 179, "xf": 179, "neat": 179, "jona": 180, "grandel": 180, "custer": 180, "matgenix": 180, "v0": 180, "latest": 180, "releas": 180, "jf": 180, "your_project_nam": 180, "sensibl": 180, "jfremot": 180, "test_project": 180, "simpli": 180, "tmp": 180, "daemon": 180, "subfold": 180, "vasp_cmd": 180, "hpc": 180, "vasp_std": 180, "cmd": 180, "vasp_gamma_cmd": 180, "vasp_gam": 180, "lobster_cmd": 180, "lobster": 180, "bashrc": 180, "export": 180, "atomate2_config_fil": 180, "best": 180, "example_work": 180, "work_dir": 180, "calc": 180, "pre_run": 180, "usernam": 180, "admin": 180, "password": 180, "port": 180, "protect": 180, "ssh": 180, "overcom": 180, "temporarili": 180, "passphras": 180, "proct": 180, "everyth": 180, "otp": 180, "mfa": 180, "multifactor": 180, "authent": 180, "login": 180, "exit": 180, "green": 180, "tick": 180, "sec": 180, "proper": 180, "anyth": 180, "reset": 180, "conda_env": 180, "local_host": 180, "test_pproject": 180, "usag": [180, 182], "transfer": 180, "dedic": 180, "warn": 180, "debug": 180, "wait": 180, "messag": 180, "prompt": 180, "question": 180, "open": 180, "xxx": 180, "answer": 180, "quit": 180, "ctrl": 180, "fine": 180, "until": 180, "drop": 180, "echo": 180, "statu": 180, "forget": 180, "tup": 180, "linux": 180, "portabl": 180, "doublerelaxmak": 180, "powerup": 180, "update_user_incar_set": 180, "22862": 180, "struct": 180, "relax_job": 180, "exe_config": 180, "exec_config": 180, "slurm_setup": 180, "much": 180, "get_jobstor": 180, "project_nam": 180, "basic": [180, 182], "phonon_bandstructur": 180, "banstructur": 180, "jobcontrol": 180, "jc": 180, "from_project_nam": 180, "job_doc": 180, "get_jobs_doc": 180, "db_id": 180, "214": 180, "blob": 180, "967e7c512f230105b1a82c2227fb101d8d4acb3d": 180, "src": 180, "l467": 180, "rerun_job": 180, "set_job_run_properti": 180, "restart": 180, "old": 180, "somewher": 180, "clash": 180, "bit": 180, "exact": 180, "nest": 180, "job_collect": 180, "job_dict": 180, "incar_set": 180, "fast": 180, "update_on": 180, "jobid": 180, "workdir": 180, "delet": 180, "did": 180, "familiar": 182, "knowledg": 182, "box": 182}, "objects": {"autoplex": [[8, 0, 0, "-", "auto"], [23, 0, 0, "-", "benchmark"], [37, 0, 0, "-", "data"], [117, 0, 0, "-", "fitting"]], "autoplex.auto": [[9, 0, 0, "-", "phonons"], [22, 0, 0, "-", "rss"]], "autoplex.auto.phonons": [[10, 0, 0, "-", "flows"], [14, 0, 0, "-", "jobs"]], "autoplex.auto.phonons.flows": [[11, 1, 1, "", "CompleteDFTvsMLBenchmarkWorkflow"], [12, 1, 1, "", "DFTSupercellSettingsMaker"], [13, 3, 1, "", "TYPE_CHECKING"]], "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow": [[11, 2, 1, "", "add_dft_phonons"], [11, 2, 1, "", "add_dft_random"], [11, 2, 1, "", "make"]], "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker": [[12, 2, 1, "", "make"]], "autoplex.auto.phonons.jobs": [[15, 3, 1, "", "TYPE_CHECKING"], [16, 4, 1, "", "complete_benchmark"], [17, 4, 1, "", "dft_phonopy_gen_data"], [18, 4, 1, "", "dft_random_gen_data"], [19, 4, 1, "", "generate_supercells"], [20, 4, 1, "", "get_iso_atom"], [21, 4, 1, "", "run_supercells"]], "autoplex.benchmark": [[24, 0, 0, "-", "phonons"], [36, 0, 0, "-", "rss"]], "autoplex.benchmark.phonons": [[25, 0, 0, "-", "flows"], [28, 0, 0, "-", "jobs"], [30, 0, 0, "-", "utils"]], "autoplex.benchmark.phonons.flows": [[26, 1, 1, "", "PhononBenchmarkMaker"], [27, 3, 1, "", "TYPE_CHECKING"]], "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker": [[26, 2, 1, "", "make"]], "autoplex.benchmark.phonons.jobs": [[29, 4, 1, "", "write_benchmark_metrics"]], "autoplex.benchmark.phonons.utils": [[31, 3, 1, "", "TYPE_CHECKING"], [32, 4, 1, "", "compare_plot"], [33, 4, 1, "", "compute_bandstructure_benchmark_metrics"], [34, 4, 1, "", "get_rmse"], [35, 4, 1, "", "rmse_qdep_plot"]], "autoplex.data": [[38, 0, 0, "-", "common"], [80, 0, 0, "-", "phonons"], [98, 0, 0, "-", "rss"]], "autoplex.data.common": [[39, 0, 0, "-", "flows"], [43, 0, 0, "-", "jobs"], [54, 0, 0, "-", "utils"]], "autoplex.data.common.flows": [[40, 1, 1, "", "DFTStaticMaker"], [41, 1, 1, "", "GenerateTrainingDataForTesting"], [42, 3, 1, "", "TYPE_CHECKING"]], "autoplex.data.common.flows.DFTStaticMaker": [[40, 2, 1, "", "make"]], "autoplex.data.common.flows.GenerateTrainingDataForTesting": [[41, 2, 1, "", "make"], [41, 2, 1, "", "static_run_and_convert"]], "autoplex.data.common.jobs": [[44, 4, 1, "", "Data_preprocessing"], [45, 3, 1, "", "TYPE_CHECKING"], [46, 4, 1, "", "VASP_collect_data"], [47, 4, 1, "", "check_convergence_vasp"], [48, 4, 1, "", "convert_to_extxyz"], [49, 4, 1, "", "generate_randomized_structures"], [50, 4, 1, "", "get_supercell_job"], [51, 4, 1, "", "plot_force_distribution"], [52, 4, 1, "", "safe_strip_hostname"], [53, 4, 1, "", "sampling"]], "autoplex.data.common.utils": [[55, 1, 1, "", "ElementCollection"], [56, 3, 1, "", "GPa"], [57, 3, 1, "", "TYPE_CHECKING"], [58, 4, 1, "", "boltz"], [59, 4, 1, "", "boltzhist_cur"], [60, 4, 1, "", "check_distances"], [61, 4, 1, "", "convexhull_cur"], [62, 4, 1, "", "create_soap_descriptor"], [63, 4, 1, "", "cur_select"], [64, 4, 1, "", "data_distillation"], [65, 4, 1, "", "energy_plot"], [66, 4, 1, "", "extract_base_name"], [67, 4, 1, "", "filter_outlier_energy"], [68, 4, 1, "", "filter_outlier_forces"], [69, 4, 1, "", "flatten"], [70, 4, 1, "", "force_plot"], [71, 4, 1, "", "mc_rattle"], [72, 4, 1, "", "parallel_calc_descriptor_vec"], [73, 4, 1, "", "plot_energy_forces"], [74, 4, 1, "", "random_vary_angle"], [75, 4, 1, "", "rms_dict"], [76, 4, 1, "", "scale_cell"], [77, 4, 1, "", "std_rattle"], [78, 4, 1, "", "stratified_dataset_split"], [79, 4, 1, "", "to_ase_trajectory"]], "autoplex.data.common.utils.ElementCollection": [[55, 2, 1, "", "find_element_pairs"], [55, 2, 1, "", "get_number_of_species"], [55, 2, 1, "", "get_species"], [55, 2, 1, "", "get_species_Z"]], "autoplex.data.phonons": [[81, 0, 0, "-", "flows"], [89, 0, 0, "-", "jobs"], [92, 0, 0, "-", "utils"]], "autoplex.data.phonons.flows": [[82, 1, 1, "", "DFTPhononMaker"], [83, 1, 1, "", "IsoAtomMaker"], [84, 1, 1, "", "IsoAtomStaticMaker"], [85, 1, 1, "", "MLPhononMaker"], [86, 1, 1, "", "RandomStructuresDataGenerator"], [87, 3, 1, "", "TYPE_CHECKING"], [88, 1, 1, "", "TightDFTStaticMaker"]], "autoplex.data.phonons.flows.IsoAtomMaker": [[83, 2, 1, "", "make"]], "autoplex.data.phonons.flows.MLPhononMaker": [[85, 2, 1, "", "make_from_ml_model"]], "autoplex.data.phonons.flows.RandomStructuresDataGenerator": [[86, 2, 1, "", "make"]], "autoplex.data.phonons.jobs": [[90, 3, 1, "", "TYPE_CHECKING"], [91, 4, 1, "", "reduce_supercell_size_job"]], "autoplex.data.phonons.utils": [[93, 3, 1, "", "TYPE_CHECKING"], [94, 4, 1, "", "check_supercells"], [95, 4, 1, "", "ml_phonon_maker_preparation"], [96, 4, 1, "", "reduce_supercell_size"], [97, 4, 1, "", "update_phonon_displacement_maker"]], "autoplex.data.rss": [[99, 0, 0, "-", "flows"], [102, 0, 0, "-", "jobs"], [108, 0, 0, "-", "utils"]], "autoplex.data.rss.flows": [[100, 4, 1, "", "do_rss_iterations"], [101, 4, 1, "", "initial_rss"]], "autoplex.data.rss.jobs": [[103, 1, 1, "", "RandomizedStructure"], [104, 3, 1, "", "TYPE_CHECKING"], [105, 3, 1, "", "atomic_numbers"], [106, 3, 1, "", "covalent_radii"], [107, 4, 1, "", "do_rss"]], "autoplex.data.rss.jobs.RandomizedStructure": [[103, 2, 1, "", "make"]], "autoplex.data.rss.utils": [[109, 3, 1, "", "GPa"], [110, 1, 1, "", "HookeanRepulsion"], [111, 3, 1, "", "atomic_numbers"], [112, 3, 1, "", "chemical_symbols"], [113, 4, 1, "", "extract_pairstyle"], [114, 4, 1, "", "minimize_structures"], [115, 1, 1, "", "myPotential"], [116, 4, 1, "", "process_rss"]], "autoplex.data.rss.utils.HookeanRepulsion": [[110, 2, 1, "", "adjust_forces"], [110, 2, 1, "", "adjust_momenta"], [110, 2, 1, "", "adjust_positions"], [110, 2, 1, "", "adjust_potential_energy"], [110, 2, 1, "", "get_indices"], [110, 2, 1, "", "get_removed_dof"], [110, 2, 1, "", "index_shuffle"], [110, 5, 1, "", "todict"]], "autoplex.data.rss.utils.myPotential": [[115, 2, 1, "", "calculate"]], "autoplex.fitting": [[118, 0, 0, "-", "common"], [168, 0, 0, "-", "phonons"], [171, 0, 0, "-", "rss"]], "autoplex.fitting.common": [[119, 0, 0, "-", "flows"], [122, 0, 0, "-", "jobs"], [124, 0, 0, "-", "regularization"], [138, 0, 0, "-", "utils"]], "autoplex.fitting.common.flows": [[120, 1, 1, "", "DataPreprocessing"], [121, 1, 1, "", "MLIPFitMaker"]], "autoplex.fitting.common.flows.DataPreprocessing": [[120, 2, 1, "", "make"]], "autoplex.fitting.common.flows.MLIPFitMaker": [[121, 2, 1, "", "make"]], "autoplex.fitting.common.jobs": [[123, 4, 1, "", "machine_learning_fit"]], "autoplex.fitting.common.regularization": [[125, 3, 1, "", "TYPE_CHECKING"], [126, 4, 1, "", "calculate_hull_3D"], [127, 4, 1, "", "calculate_hull_ND"], [128, 4, 1, "", "get_convex_hull"], [129, 4, 1, "", "get_e_distance_to_hull"], [130, 4, 1, "", "get_e_distance_to_hull_3D"], [131, 4, 1, "", "get_intersect"], [132, 4, 1, "", "get_mole_frac"], [133, 4, 1, "", "label_stoichiometry_volume"], [134, 4, 1, "", "piecewise_linear"], [135, 4, 1, "", "point_in_triangle_2D"], [136, 4, 1, "", "point_in_triangle_ND"], [137, 4, 1, "", "set_sigma"]], "autoplex.fitting.common.utils": [[139, 3, 1, "", "TYPE_CHECKING"], [140, 4, 1, "", "calculate_delta"], [141, 4, 1, "", "check_convergence"], [142, 3, 1, "", "chemical_symbols"], [143, 4, 1, "", "compute_pairs_triplets"], [144, 4, 1, "", "convert_xyz_to_structure"], [145, 4, 1, "", "energy_remain"], [146, 4, 1, "", "extract_gap_label"], [147, 4, 1, "", "flatten"], [148, 4, 1, "", "gap_fitting"], [149, 4, 1, "", "gap_hyperparameter_constructor"], [150, 4, 1, "", "gcm3_to_Vm"], [151, 4, 1, "", "get_atomic_numbers"], [152, 4, 1, "", "get_list_of_vasp_calc_dirs"], [153, 4, 1, "", "jace_fitting"], [154, 4, 1, "", "load_mlip_hyperparameter_defaults"], [155, 4, 1, "", "m3gnet_fitting"], [156, 4, 1, "", "mace_fitting"], [157, 4, 1, "", "mace_virial_format_conversion"], [158, 4, 1, "", "nequip_fitting"], [159, 4, 1, "", "plot_convex_hull"], [160, 4, 1, "", "prepare_fit_environment"], [161, 4, 1, "", "run_ace"], [162, 4, 1, "", "run_gap"], [163, 4, 1, "", "run_mace"], [164, 4, 1, "", "run_nequip"], [165, 4, 1, "", "run_quip"], [166, 4, 1, "", "vaspoutput_2_extended_xyz"], [167, 4, 1, "", "write_after_distillation_data_split"]], "autoplex.fitting.phonons": [[169, 0, 0, "-", "flows"], [170, 0, 0, "-", "jobs"]], "autoplex.fitting.rss": [[172, 0, 0, "-", "flows"], [173, 0, 0, "-", "jobs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"guidelin": [1, 4, 179], "contribut": [1, 4, 179], "autoplex": [1, 4, 7, 8, 9, 10, 14, 22, 23, 24, 25, 28, 30, 36, 37, 38, 39, 43, 54, 80, 81, 89, 92, 98, 99, 102, 108, 117, 118, 119, 122, 124, 138, 168, 169, 170, 171, 172, 173, 176], "gener": [1, 4, 175, 176, 177, 178], "code": [1, 2, 4], "structur": [1, 4, 178], "format": [1, 4], "requir": [1, 4, 177], "commit": [1, 4], "contributor": 2, "project": 2, "lead": 2, "berlin": 2, "oxford": 2, "core": 2, "develop": [2, 5], "maintain": 2, "licens": 3, "instal": [5, 179, 180], "run": [5, 175, 176, 177], "unit": 5, "test": [5, 177, 180], "build": 5, "document": [5, 7], "local": [5, 180], "glossari": 6, "auto": [8, 9, 10, 14, 22], "phonon": [9, 10, 14, 24, 25, 28, 30, 80, 81, 89, 92, 168, 169, 170], "flow": [10, 25, 39, 81, 99, 119, 169, 172], "completedftvsmlbenchmarkworkflow": 11, "dftsupercellsettingsmak": 12, "type_check": [13, 15, 27, 31, 42, 45, 57, 87, 90, 93, 104, 125, 139], "job": [14, 28, 43, 89, 102, 122, 170, 173, 180], "complete_benchmark": 16, "dft_phonopy_gen_data": 17, "dft_random_gen_data": 18, "generate_supercel": 19, "get_iso_atom": 20, "run_supercel": 21, "rss": [22, 36, 98, 99, 102, 108, 171, 172, 173], "benchmark": [23, 24, 25, 28, 30, 36, 175, 176], "phononbenchmarkmak": 26, "write_benchmark_metr": 29, "util": [30, 54, 92, 108, 138], "compare_plot": 32, "compute_bandstructure_benchmark_metr": 33, "get_rms": 34, "rmse_qdep_plot": 35, "data": [37, 38, 39, 43, 54, 80, 81, 89, 92, 98, 99, 102, 108, 178], "common": [38, 39, 43, 54, 118, 119, 122, 124, 138], "dftstaticmak": 40, "generatetrainingdatafortest": 41, "data_preprocess": 44, "vasp_collect_data": 46, "check_convergence_vasp": 47, "convert_to_extxyz": 48, "generate_randomized_structur": 49, "get_supercell_job": 50, "plot_force_distribut": 51, "safe_strip_hostnam": 52, "sampl": 53, "elementcollect": 55, "gpa": [56, 109], "boltz": 58, "boltzhist_cur": 59, "check_dist": 60, "convexhull_cur": 61, "create_soap_descriptor": 62, "cur_select": 63, "data_distil": 64, "energy_plot": 65, "extract_base_nam": 66, "filter_outlier_energi": 67, "filter_outlier_forc": 68, "flatten": [69, 147], "force_plot": 70, "mc_rattl": 71, "parallel_calc_descriptor_vec": 72, "plot_energy_forc": 73, "random_vary_angl": 74, "rms_dict": 75, "scale_cel": 76, "std_rattl": 77, "stratified_dataset_split": 78, "to_ase_trajectori": 79, "dftphononmak": 82, "isoatommak": 83, "isoatomstaticmak": 84, "mlphononmak": 85, "randomstructuresdatagener": 86, "tightdftstaticmak": 88, "reduce_supercell_size_job": 91, "check_supercel": 94, "ml_phonon_maker_prepar": 95, "reduce_supercell_s": 96, "update_phonon_displacement_mak": 97, "do_rss_iter": 100, "initial_rss": 101, "randomizedstructur": 103, "atomic_numb": [105, 111], "covalent_radii": 106, "do_rss": 107, "hookeanrepuls": 110, "chemical_symbol": [112, 142], "extract_pairstyl": 113, "minimize_structur": 114, "mypotenti": 115, "process_rss": 116, "fit": [117, 118, 119, 122, 124, 138, 168, 169, 170, 171, 172, 173, 176], "datapreprocess": 120, "mlipfitmak": 121, "machine_learning_fit": 123, "regular": 124, "calculate_hull_3d": 126, "calculate_hull_nd": 127, "get_convex_hul": 128, "get_e_distance_to_hul": 129, "get_e_distance_to_hull_3d": 130, "get_intersect": 131, "get_mole_frac": 132, "label_stoichiometry_volum": 133, "piecewise_linear": 134, "point_in_triangle_2d": 135, "point_in_triangle_nd": 136, "set_sigma": 137, "calculate_delta": 140, "check_converg": 141, "compute_pairs_triplet": 143, "convert_xyz_to_structur": 144, "energy_remain": 145, "extract_gap_label": 146, "gap_fit": 148, "gap_hyperparameter_constructor": 149, "gcm3_to_vm": 150, "get_atomic_numb": 151, "get_list_of_vasp_calc_dir": 152, "jace_fit": 153, "load_mlip_hyperparameter_default": 154, "m3gnet_fit": 155, "mace_fit": 156, "mace_virial_format_convers": 157, "nequip_fit": 158, "plot_convex_hul": 159, "prepare_fit_environ": 160, "run_ac": 161, "run_gap": 162, "run_mac": 163, "run_nequip": 164, "run_quip": 165, "vaspoutput_2_extended_xyz": 166, "write_after_distillation_data_split": 167, "api": [174, 180], "refer": [174, 178], "set": [175, 176, 178, 180], "error": 175, "metric": 175, "pre": [175, 180], "exist": 175, "dft": [175, 177], "calcul": 175, "gap": [175, 176], "potenti": [175, 176], "ac": 176, "nequip": 176, "m3gnet": 176, "mace": 176, "exampl": [176, 180], "script": [176, 180], "workflow": [176, 177, 180], "us": [176, 180], "si": 176, "databas": 176, "mlip": 176, "onli": 176, "out": 177, "box": 177, "befor": 177, "time": [177, 180], "memori": 177, "now": 177, "start": [177, 179, 180], "manag": 177, "output": 177, "result": 177, "phonopi": 178, "rattl": 178, "vasp": [178, 180], "get": [179, 180], "setup": [179, 180, 181], "jobflow": 180, "remot": 180, "your": 180, "machin": 180, "cluster": 180, "chang": 180, "done": 180, "config": 180, "file": 180, "check": 180, "work": 180, "correctli": 180, "add": 180, "submit": 180, "db": 180, "from": 180, "simpl": 180, "python": 180, "relax": 180, "atomate2": 180, "differ": 180, "worker": 180, "type": 180, "queri": 180, "complet": 180, "updat": 180, "fail": 180, "limit": 180, "execut": 180, "exsit": 180, "input": 180, "paramet": 180, "some": 180, "command": 180, "link": 180, "tutori": 182, "tabl": 182, "content": 182}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Guidelines for contributions to autoplex": [[1, "guidelines-for-contributions-to-autoplex"], [4, "guidelines-for-contributions-to-autoplex"]], "General code structure": [[1, "general-code-structure"], [4, "general-code-structure"]], "Formatting requirements": [[1, "formatting-requirements"], [4, "formatting-requirements"]], "Commit guidelines": [[1, "commit-guidelines"], [4, "commit-guidelines"]], "Contributors": [[2, "contributors"], [2, "id1"]], "Project lead (Berlin)": [[2, "project-lead-berlin"]], "Project lead (Oxford)": [[2, "project-lead-oxford"]], "Core code developers and maintainers": [[2, "core-code-developers-and-maintainers"]], "License": [[3, "license"]], "Developer Installation": [[5, "developer-installation"]], "Running unit tests": [[5, "running-unit-tests"]], "Building the documentation locally": [[5, "building-the-documentation-locally"]], "Glossary": [[6, "glossary"]], "autoplex documentation": [[7, "autoplex-documentation"]], "autoplex.auto": [[8, "module-autoplex.auto"]], "autoplex.auto.phonons": [[9, "module-autoplex.auto.phonons"]], "autoplex.auto.phonons.flows": [[10, "module-autoplex.auto.phonons.flows"]], "CompleteDFTvsMLBenchmarkWorkflow": [[11, "completedftvsmlbenchmarkworkflow"]], "DFTSupercellSettingsMaker": [[12, "dftsupercellsettingsmaker"]], "TYPE_CHECKING": [[13, "type-checking"], [15, "type-checking"], [27, "type-checking"], [31, "type-checking"], [42, "type-checking"], [45, "type-checking"], [57, "type-checking"], [87, "type-checking"], [90, "type-checking"], [93, "type-checking"], [104, "type-checking"], [125, "type-checking"], [139, "type-checking"]], "autoplex.auto.phonons.jobs": [[14, "module-autoplex.auto.phonons.jobs"]], "complete_benchmark": [[16, "complete-benchmark"]], "dft_phonopy_gen_data": [[17, "dft-phonopy-gen-data"]], "dft_random_gen_data": [[18, "dft-random-gen-data"]], "generate_supercells": [[19, "generate-supercells"]], "get_iso_atom": [[20, "get-iso-atom"]], "run_supercells": [[21, "run-supercells"]], "autoplex.auto.rss": [[22, "module-autoplex.auto.rss"]], "autoplex.benchmark": [[23, "module-autoplex.benchmark"]], "autoplex.benchmark.phonons": [[24, "module-autoplex.benchmark.phonons"]], "autoplex.benchmark.phonons.flows": [[25, "module-autoplex.benchmark.phonons.flows"]], "PhononBenchmarkMaker": [[26, "phononbenchmarkmaker"]], "autoplex.benchmark.phonons.jobs": [[28, "module-autoplex.benchmark.phonons.jobs"]], "write_benchmark_metrics": [[29, "write-benchmark-metrics"]], "autoplex.benchmark.phonons.utils": [[30, "module-autoplex.benchmark.phonons.utils"]], "compare_plot": [[32, "compare-plot"]], "compute_bandstructure_benchmark_metrics": [[33, "compute-bandstructure-benchmark-metrics"]], "get_rmse": [[34, "get-rmse"]], "rmse_qdep_plot": [[35, "rmse-qdep-plot"]], "autoplex.benchmark.rss": [[36, "module-autoplex.benchmark.rss"]], "autoplex.data": [[37, "module-autoplex.data"]], "autoplex.data.common": [[38, "module-autoplex.data.common"]], "autoplex.data.common.flows": [[39, "module-autoplex.data.common.flows"]], "DFTStaticMaker": [[40, "dftstaticmaker"]], "GenerateTrainingDataForTesting": [[41, "generatetrainingdatafortesting"]], "autoplex.data.common.jobs": [[43, "module-autoplex.data.common.jobs"]], "Data_preprocessing": [[44, "data-preprocessing"]], "VASP_collect_data": [[46, "vasp-collect-data"]], "check_convergence_vasp": [[47, "check-convergence-vasp"]], "convert_to_extxyz": [[48, "convert-to-extxyz"]], "generate_randomized_structures": [[49, "generate-randomized-structures"]], "get_supercell_job": [[50, "get-supercell-job"]], "plot_force_distribution": [[51, "plot-force-distribution"]], "safe_strip_hostname": [[52, "safe-strip-hostname"]], "sampling": [[53, "sampling"]], "autoplex.data.common.utils": [[54, "module-autoplex.data.common.utils"]], "ElementCollection": [[55, "elementcollection"]], "GPa": [[56, "gpa"], [109, "gpa"]], "boltz": [[58, "boltz"]], "boltzhist_cur": [[59, "boltzhist-cur"]], "check_distances": [[60, "check-distances"]], "convexhull_cur": [[61, "convexhull-cur"]], "create_soap_descriptor": [[62, "create-soap-descriptor"]], "cur_select": [[63, "cur-select"]], "data_distillation": [[64, "data-distillation"]], "energy_plot": [[65, "energy-plot"]], "extract_base_name": [[66, "extract-base-name"]], "filter_outlier_energy": [[67, "filter-outlier-energy"]], "filter_outlier_forces": [[68, "filter-outlier-forces"]], "flatten": [[69, "flatten"], [147, "flatten"]], "force_plot": [[70, "force-plot"]], "mc_rattle": [[71, "mc-rattle"]], "parallel_calc_descriptor_vec": [[72, "parallel-calc-descriptor-vec"]], "plot_energy_forces": [[73, "plot-energy-forces"]], "random_vary_angle": [[74, "random-vary-angle"]], "rms_dict": [[75, "rms-dict"]], "scale_cell": [[76, "scale-cell"]], "std_rattle": [[77, "std-rattle"]], "stratified_dataset_split": [[78, "stratified-dataset-split"]], "to_ase_trajectory": [[79, "to-ase-trajectory"]], "autoplex.data.phonons": [[80, "module-autoplex.data.phonons"]], "autoplex.data.phonons.flows": [[81, "module-autoplex.data.phonons.flows"]], "DFTPhononMaker": [[82, "dftphononmaker"]], "IsoAtomMaker": [[83, "isoatommaker"]], "IsoAtomStaticMaker": [[84, "isoatomstaticmaker"]], "MLPhononMaker": [[85, "mlphononmaker"]], "RandomStructuresDataGenerator": [[86, "randomstructuresdatagenerator"]], "TightDFTStaticMaker": [[88, "tightdftstaticmaker"]], "autoplex.data.phonons.jobs": [[89, "module-autoplex.data.phonons.jobs"]], "reduce_supercell_size_job": [[91, "reduce-supercell-size-job"]], "autoplex.data.phonons.utils": [[92, "module-autoplex.data.phonons.utils"]], "check_supercells": [[94, "check-supercells"]], "ml_phonon_maker_preparation": [[95, "ml-phonon-maker-preparation"]], "reduce_supercell_size": [[96, "reduce-supercell-size"]], "update_phonon_displacement_maker": [[97, "update-phonon-displacement-maker"]], "autoplex.data.rss": [[98, "module-autoplex.data.rss"]], "autoplex.data.rss.flows": [[99, "module-autoplex.data.rss.flows"]], "do_rss_iterations": [[100, "do-rss-iterations"]], "initial_rss": [[101, "initial-rss"]], "autoplex.data.rss.jobs": [[102, "module-autoplex.data.rss.jobs"]], "RandomizedStructure": [[103, "randomizedstructure"]], "atomic_numbers": [[105, "atomic-numbers"], [111, "atomic-numbers"]], "covalent_radii": [[106, "covalent-radii"]], "do_rss": [[107, "do-rss"]], "autoplex.data.rss.utils": [[108, "module-autoplex.data.rss.utils"]], "HookeanRepulsion": [[110, "hookeanrepulsion"]], "chemical_symbols": [[112, "chemical-symbols"], [142, "chemical-symbols"]], "extract_pairstyle": [[113, "extract-pairstyle"]], "minimize_structures": [[114, "minimize-structures"]], "myPotential": [[115, "mypotential"]], "process_rss": [[116, "process-rss"]], "autoplex.fitting": [[117, "module-autoplex.fitting"]], "autoplex.fitting.common": [[118, "module-autoplex.fitting.common"]], "autoplex.fitting.common.flows": [[119, "module-autoplex.fitting.common.flows"]], "DataPreprocessing": [[120, "datapreprocessing"]], "MLIPFitMaker": [[121, "mlipfitmaker"]], "autoplex.fitting.common.jobs": [[122, "module-autoplex.fitting.common.jobs"]], "machine_learning_fit": [[123, "machine-learning-fit"]], "autoplex.fitting.common.regularization": [[124, "module-autoplex.fitting.common.regularization"]], "calculate_hull_3D": [[126, "calculate-hull-3d"]], "calculate_hull_ND": [[127, "calculate-hull-nd"]], "get_convex_hull": [[128, "get-convex-hull"]], "get_e_distance_to_hull": [[129, "get-e-distance-to-hull"]], "get_e_distance_to_hull_3D": [[130, "get-e-distance-to-hull-3d"]], "get_intersect": [[131, "get-intersect"]], "get_mole_frac": [[132, "get-mole-frac"]], "label_stoichiometry_volume": [[133, "label-stoichiometry-volume"]], "piecewise_linear": [[134, "piecewise-linear"]], "point_in_triangle_2D": [[135, "point-in-triangle-2d"]], "point_in_triangle_ND": [[136, "point-in-triangle-nd"]], "set_sigma": [[137, "set-sigma"]], "autoplex.fitting.common.utils": [[138, "module-autoplex.fitting.common.utils"]], "calculate_delta": [[140, "calculate-delta"]], "check_convergence": [[141, "check-convergence"]], "compute_pairs_triplets": [[143, "compute-pairs-triplets"]], "convert_xyz_to_structure": [[144, "convert-xyz-to-structure"]], "energy_remain": [[145, "energy-remain"]], "extract_gap_label": [[146, "extract-gap-label"]], "gap_fitting": [[148, "gap-fitting"]], "gap_hyperparameter_constructor": [[149, "gap-hyperparameter-constructor"]], "gcm3_to_Vm": [[150, "gcm3-to-vm"]], "get_atomic_numbers": [[151, "get-atomic-numbers"]], "get_list_of_vasp_calc_dirs": [[152, "get-list-of-vasp-calc-dirs"]], "jace_fitting": [[153, "jace-fitting"]], "load_mlip_hyperparameter_defaults": [[154, "load-mlip-hyperparameter-defaults"]], "m3gnet_fitting": [[155, "m3gnet-fitting"]], "mace_fitting": [[156, "mace-fitting"]], "mace_virial_format_conversion": [[157, "mace-virial-format-conversion"]], "nequip_fitting": [[158, "nequip-fitting"]], "plot_convex_hull": [[159, "plot-convex-hull"]], "prepare_fit_environment": [[160, "prepare-fit-environment"]], "run_ace": [[161, "run-ace"]], "run_gap": [[162, "run-gap"]], "run_mace": [[163, "run-mace"]], "run_nequip": [[164, "run-nequip"]], "run_quip": [[165, "run-quip"]], "vaspoutput_2_extended_xyz": [[166, "vaspoutput-2-extended-xyz"]], "write_after_distillation_data_split": [[167, "write-after-distillation-data-split"]], "autoplex.fitting.phonons": [[168, "module-autoplex.fitting.phonons"]], "autoplex.fitting.phonons.flows": [[169, "module-autoplex.fitting.phonons.flows"]], "autoplex.fitting.phonons.jobs": [[170, "module-autoplex.fitting.phonons.jobs"]], "autoplex.fitting.rss": [[171, "module-autoplex.fitting.rss"]], "autoplex.fitting.rss.flows": [[172, "module-autoplex.fitting.rss.flows"]], "autoplex.fitting.rss.jobs": [[173, "module-autoplex.fitting.rss.jobs"]], "API reference": [[174, "api-reference"]], "Benchmark": [[175, "id1"]], "General settings": [[175, "general-settings"], [176, "general-settings"]], "Error metrics": [[175, "error-metrics"]], "Run a benchmark with a pre-existing DFT calculation and GAP potential": [[175, "run-a-benchmark-with-a-pre-existing-dft-calculation-and-gap-potential"]], "Fitting potentials": [[176, "fitting-potentials"]], "GAP": [[176, "gap"]], "ACE": [[176, "ace"]], "Nequip": [[176, "nequip"]], "M3GNet": [[176, "m3gnet"]], "MACE": [[176, "mace"]], "Example script for autoplex workflow using GAP to fit and benchmark a Si database": [[176, "example-script-for-autoplex-workflow-using-gap-to-fit-and-benchmark-a-si-database"]], "Running a MLIP fit only": [[176, "running-a-mlip-fit-only"]], "Out of the box workflow": [[177, "out-of-the-box-workflow"]], "General workflow": [[177, "general-workflow"]], "Before running the workflow": [[177, "before-running-the-workflow"]], "Test DFT run times and memory requirements": [[177, "test-dft-run-times-and-memory-requirements"]], "Now start the workflow": [[177, "now-start-the-workflow"]], "Workflow management": [[177, "workflow-management"]], "Output and results": [[177, "output-and-results"]], "Generating reference data": [[178, "generating-reference-data"]], "phonopy generated structures": [[178, "phonopy-generated-structures"]], "Rattled structures": [[178, "rattled-structures"]], "VASP settings": [[178, "vasp-settings"]], "Getting started": [[179, "getting-started"], [180, "getting-started"]], "Setup": [[179, "setup"], [181, "setup"]], "Installation": [[179, "installation"], [180, "installation"]], "Contributing guidelines": [[179, "contributing-guidelines"]], "Jobflow-remote setup": [[180, "jobflow-remote-setup"]], "on your local machine": [[180, "on-your-local-machine"]], "on your remote cluster": [[180, "on-your-remote-cluster"]], "Changes to be done in the config file - on your local machine": [[180, "changes-to-be-done-in-the-config-file-on-your-local-machine"]], "Check if your setup works correctly": [[180, "check-if-your-setup-works-correctly"]], "Example job scripts to test (Add/Submit jobs to DB from your local machine)": [[180, "example-job-scripts-to-test-add-submit-jobs-to-db-from-your-local-machine"]], "Simple Python job": [[180, "simple-python-job"]], "VASP relax job using atomate2 workflow": [[180, "vasp-relax-job-using-atomate2-workflow"]], "Setting different workers for different job types": [[180, "setting-different-workers-for-different-job-types"]], "Querying completed jobs from DB using jobflow-remote Python API": [[180, "querying-completed-jobs-from-db-using-jobflow-remote-python-api"]], "Updating failed jobs time limit or execution config": [[180, "updating-failed-jobs-time-limit-or-execution-config"]], "Update pre-exsiting job input parameters in the DB": [[180, "update-pre-exsiting-job-input-parameters-in-the-db"]], "Some useful commands": [[180, "some-useful-commands"]], "Some useful links": [[180, "some-useful-links"]], "Tutorials": [[182, "tutorials"]], "Tutorial table of content": [[182, "tutorial-table-of-content"]]}, "indexentries": {"generic type": [[6, "term-generic-type"]], "autoplex.auto": [[8, "module-autoplex.auto"]], "module": [[8, "module-autoplex.auto"], [9, "module-autoplex.auto.phonons"], [10, "module-autoplex.auto.phonons.flows"], [14, "module-autoplex.auto.phonons.jobs"], [22, "module-autoplex.auto.rss"], [23, "module-autoplex.benchmark"], [24, "module-autoplex.benchmark.phonons"], [25, "module-autoplex.benchmark.phonons.flows"], [28, "module-autoplex.benchmark.phonons.jobs"], [30, "module-autoplex.benchmark.phonons.utils"], [36, "module-autoplex.benchmark.rss"], [37, "module-autoplex.data"], [38, "module-autoplex.data.common"], [39, "module-autoplex.data.common.flows"], [43, "module-autoplex.data.common.jobs"], [54, "module-autoplex.data.common.utils"], [80, "module-autoplex.data.phonons"], [81, "module-autoplex.data.phonons.flows"], [89, "module-autoplex.data.phonons.jobs"], [92, "module-autoplex.data.phonons.utils"], [98, "module-autoplex.data.rss"], [99, "module-autoplex.data.rss.flows"], [102, "module-autoplex.data.rss.jobs"], [108, "module-autoplex.data.rss.utils"], [117, "module-autoplex.fitting"], [118, "module-autoplex.fitting.common"], [119, "module-autoplex.fitting.common.flows"], [122, "module-autoplex.fitting.common.jobs"], [124, "module-autoplex.fitting.common.regularization"], [138, "module-autoplex.fitting.common.utils"], [168, "module-autoplex.fitting.phonons"], [169, "module-autoplex.fitting.phonons.flows"], [170, "module-autoplex.fitting.phonons.jobs"], [171, "module-autoplex.fitting.rss"], [172, "module-autoplex.fitting.rss.flows"], [173, "module-autoplex.fitting.rss.jobs"]], "autoplex.auto.phonons": [[9, "module-autoplex.auto.phonons"]], "autoplex.auto.phonons.flows": [[10, "module-autoplex.auto.phonons.flows"]], "completedftvsmlbenchmarkworkflow (class in autoplex.auto.phonons.flows)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow"]], "add_dft_phonons() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow static method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.add_dft_phonons"]], "add_dft_random() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow static method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.add_dft_random"]], "make() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.make"]], "dftsupercellsettingsmaker (class in autoplex.auto.phonons.flows)": [[12, "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker"]], "make() (autoplex.auto.phonons.flows.dftsupercellsettingsmaker method)": [[12, "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker.make"]], "type_checking (in module autoplex.auto.phonons.flows)": [[13, "autoplex.auto.phonons.flows.TYPE_CHECKING"]], "autoplex.auto.phonons.jobs": [[14, "module-autoplex.auto.phonons.jobs"]], "type_checking (in module autoplex.auto.phonons.jobs)": [[15, "autoplex.auto.phonons.jobs.TYPE_CHECKING"]], "complete_benchmark() (in module autoplex.auto.phonons.jobs)": [[16, "autoplex.auto.phonons.jobs.complete_benchmark"]], "dft_phonopy_gen_data() (in module autoplex.auto.phonons.jobs)": [[17, "autoplex.auto.phonons.jobs.dft_phonopy_gen_data"]], "dft_random_gen_data() (in module autoplex.auto.phonons.jobs)": [[18, "autoplex.auto.phonons.jobs.dft_random_gen_data"]], "generate_supercells() (in module autoplex.auto.phonons.jobs)": [[19, "autoplex.auto.phonons.jobs.generate_supercells"]], "get_iso_atom() (in module autoplex.auto.phonons.jobs)": [[20, "autoplex.auto.phonons.jobs.get_iso_atom"]], "run_supercells() (in module autoplex.auto.phonons.jobs)": [[21, "autoplex.auto.phonons.jobs.run_supercells"]], "autoplex.auto.rss": [[22, "module-autoplex.auto.rss"]], "autoplex.benchmark": [[23, "module-autoplex.benchmark"]], "autoplex.benchmark.phonons": [[24, "module-autoplex.benchmark.phonons"]], "autoplex.benchmark.phonons.flows": [[25, "module-autoplex.benchmark.phonons.flows"]], "phononbenchmarkmaker (class in autoplex.benchmark.phonons.flows)": [[26, "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker"]], "make() (autoplex.benchmark.phonons.flows.phononbenchmarkmaker method)": [[26, "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker.make"]], "type_checking (in module autoplex.benchmark.phonons.flows)": [[27, "autoplex.benchmark.phonons.flows.TYPE_CHECKING"]], "autoplex.benchmark.phonons.jobs": [[28, "module-autoplex.benchmark.phonons.jobs"]], "write_benchmark_metrics() (in module autoplex.benchmark.phonons.jobs)": [[29, "autoplex.benchmark.phonons.jobs.write_benchmark_metrics"]], "autoplex.benchmark.phonons.utils": [[30, "module-autoplex.benchmark.phonons.utils"]], "type_checking (in module autoplex.benchmark.phonons.utils)": [[31, "autoplex.benchmark.phonons.utils.TYPE_CHECKING"]], "compare_plot() (in module autoplex.benchmark.phonons.utils)": [[32, "autoplex.benchmark.phonons.utils.compare_plot"]], "compute_bandstructure_benchmark_metrics() (in module autoplex.benchmark.phonons.utils)": [[33, "autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics"]], "get_rmse() (in module autoplex.benchmark.phonons.utils)": [[34, "autoplex.benchmark.phonons.utils.get_rmse"]], "rmse_qdep_plot() (in module autoplex.benchmark.phonons.utils)": [[35, "autoplex.benchmark.phonons.utils.rmse_qdep_plot"]], "autoplex.benchmark.rss": [[36, "module-autoplex.benchmark.rss"]], "autoplex.data": [[37, "module-autoplex.data"]], "autoplex.data.common": [[38, "module-autoplex.data.common"]], "autoplex.data.common.flows": [[39, "module-autoplex.data.common.flows"]], "dftstaticmaker (class in autoplex.data.common.flows)": [[40, "autoplex.data.common.flows.DFTStaticMaker"]], "make() (autoplex.data.common.flows.dftstaticmaker method)": [[40, "autoplex.data.common.flows.DFTStaticMaker.make"]], "generatetrainingdatafortesting (class in autoplex.data.common.flows)": [[41, "autoplex.data.common.flows.GenerateTrainingDataForTesting"]], "make() (autoplex.data.common.flows.generatetrainingdatafortesting method)": [[41, "autoplex.data.common.flows.GenerateTrainingDataForTesting.make"]], "static_run_and_convert() (autoplex.data.common.flows.generatetrainingdatafortesting method)": [[41, "autoplex.data.common.flows.GenerateTrainingDataForTesting.static_run_and_convert"]], "type_checking (in module autoplex.data.common.flows)": [[42, "autoplex.data.common.flows.TYPE_CHECKING"]], "autoplex.data.common.jobs": [[43, "module-autoplex.data.common.jobs"]], "data_preprocessing() (in module autoplex.data.common.jobs)": [[44, "autoplex.data.common.jobs.Data_preprocessing"]], "type_checking (in module autoplex.data.common.jobs)": [[45, "autoplex.data.common.jobs.TYPE_CHECKING"]], "vasp_collect_data() (in module autoplex.data.common.jobs)": [[46, "autoplex.data.common.jobs.VASP_collect_data"]], "check_convergence_vasp() (in module autoplex.data.common.jobs)": [[47, "autoplex.data.common.jobs.check_convergence_vasp"]], "convert_to_extxyz() (in module autoplex.data.common.jobs)": [[48, "autoplex.data.common.jobs.convert_to_extxyz"]], "generate_randomized_structures() (in module autoplex.data.common.jobs)": [[49, "autoplex.data.common.jobs.generate_randomized_structures"]], "get_supercell_job() (in module autoplex.data.common.jobs)": [[50, "autoplex.data.common.jobs.get_supercell_job"]], "plot_force_distribution() (in module autoplex.data.common.jobs)": [[51, "autoplex.data.common.jobs.plot_force_distribution"]], "safe_strip_hostname() (in module autoplex.data.common.jobs)": [[52, "autoplex.data.common.jobs.safe_strip_hostname"]], "sampling() (in module autoplex.data.common.jobs)": [[53, "autoplex.data.common.jobs.sampling"]], "autoplex.data.common.utils": [[54, "module-autoplex.data.common.utils"]], "elementcollection (class in autoplex.data.common.utils)": [[55, "autoplex.data.common.utils.ElementCollection"]], "find_element_pairs() (autoplex.data.common.utils.elementcollection method)": [[55, "autoplex.data.common.utils.ElementCollection.find_element_pairs"]], "get_number_of_species() (autoplex.data.common.utils.elementcollection method)": [[55, "autoplex.data.common.utils.ElementCollection.get_number_of_species"]], "get_species() (autoplex.data.common.utils.elementcollection method)": [[55, "autoplex.data.common.utils.ElementCollection.get_species"]], "get_species_z() (autoplex.data.common.utils.elementcollection method)": [[55, "autoplex.data.common.utils.ElementCollection.get_species_Z"]], "gpa (in module autoplex.data.common.utils)": [[56, "autoplex.data.common.utils.GPa"]], "type_checking (in module autoplex.data.common.utils)": [[57, "autoplex.data.common.utils.TYPE_CHECKING"]], "boltz() (in module autoplex.data.common.utils)": [[58, "autoplex.data.common.utils.boltz"]], "boltzhist_cur() (in module autoplex.data.common.utils)": [[59, "autoplex.data.common.utils.boltzhist_cur"]], "check_distances() (in module autoplex.data.common.utils)": [[60, "autoplex.data.common.utils.check_distances"]], "convexhull_cur() (in module autoplex.data.common.utils)": [[61, "autoplex.data.common.utils.convexhull_cur"]], "create_soap_descriptor() (in module autoplex.data.common.utils)": [[62, "autoplex.data.common.utils.create_soap_descriptor"]], "cur_select() (in module autoplex.data.common.utils)": [[63, "autoplex.data.common.utils.cur_select"]], "data_distillation() (in module autoplex.data.common.utils)": [[64, "autoplex.data.common.utils.data_distillation"]], "energy_plot() (in module autoplex.data.common.utils)": [[65, "autoplex.data.common.utils.energy_plot"]], "extract_base_name() (in module autoplex.data.common.utils)": [[66, "autoplex.data.common.utils.extract_base_name"]], "filter_outlier_energy() (in module autoplex.data.common.utils)": [[67, "autoplex.data.common.utils.filter_outlier_energy"]], "filter_outlier_forces() (in module autoplex.data.common.utils)": [[68, "autoplex.data.common.utils.filter_outlier_forces"]], "flatten() (in module autoplex.data.common.utils)": [[69, "autoplex.data.common.utils.flatten"]], "force_plot() (in module autoplex.data.common.utils)": [[70, "autoplex.data.common.utils.force_plot"]], "mc_rattle() (in module autoplex.data.common.utils)": [[71, "autoplex.data.common.utils.mc_rattle"]], "parallel_calc_descriptor_vec() (in module autoplex.data.common.utils)": [[72, "autoplex.data.common.utils.parallel_calc_descriptor_vec"]], "plot_energy_forces() (in module autoplex.data.common.utils)": [[73, "autoplex.data.common.utils.plot_energy_forces"]], "random_vary_angle() (in module autoplex.data.common.utils)": [[74, "autoplex.data.common.utils.random_vary_angle"]], "rms_dict() (in module autoplex.data.common.utils)": [[75, "autoplex.data.common.utils.rms_dict"]], "scale_cell() (in module autoplex.data.common.utils)": [[76, "autoplex.data.common.utils.scale_cell"]], "std_rattle() (in module autoplex.data.common.utils)": [[77, "autoplex.data.common.utils.std_rattle"]], "stratified_dataset_split() (in module autoplex.data.common.utils)": [[78, "autoplex.data.common.utils.stratified_dataset_split"]], "to_ase_trajectory() (in module autoplex.data.common.utils)": [[79, "autoplex.data.common.utils.to_ase_trajectory"]], "autoplex.data.phonons": [[80, "module-autoplex.data.phonons"]], "autoplex.data.phonons.flows": [[81, "module-autoplex.data.phonons.flows"]], "dftphononmaker (class in autoplex.data.phonons.flows)": [[82, "autoplex.data.phonons.flows.DFTPhononMaker"]], "isoatommaker (class in autoplex.data.phonons.flows)": [[83, "autoplex.data.phonons.flows.IsoAtomMaker"]], "make() (autoplex.data.phonons.flows.isoatommaker method)": [[83, "autoplex.data.phonons.flows.IsoAtomMaker.make"]], "isoatomstaticmaker (class in autoplex.data.phonons.flows)": [[84, "autoplex.data.phonons.flows.IsoAtomStaticMaker"]], "mlphononmaker (class in autoplex.data.phonons.flows)": [[85, "autoplex.data.phonons.flows.MLPhononMaker"]], "make_from_ml_model() (autoplex.data.phonons.flows.mlphononmaker method)": [[85, "autoplex.data.phonons.flows.MLPhononMaker.make_from_ml_model"]], "randomstructuresdatagenerator (class in autoplex.data.phonons.flows)": [[86, "autoplex.data.phonons.flows.RandomStructuresDataGenerator"]], "make() (autoplex.data.phonons.flows.randomstructuresdatagenerator method)": [[86, "autoplex.data.phonons.flows.RandomStructuresDataGenerator.make"]], "type_checking (in module autoplex.data.phonons.flows)": [[87, "autoplex.data.phonons.flows.TYPE_CHECKING"]], "tightdftstaticmaker (class in autoplex.data.phonons.flows)": [[88, "autoplex.data.phonons.flows.TightDFTStaticMaker"]], "autoplex.data.phonons.jobs": [[89, "module-autoplex.data.phonons.jobs"]], "type_checking (in module autoplex.data.phonons.jobs)": [[90, "autoplex.data.phonons.jobs.TYPE_CHECKING"]], "reduce_supercell_size_job() (in module autoplex.data.phonons.jobs)": [[91, "autoplex.data.phonons.jobs.reduce_supercell_size_job"]], "autoplex.data.phonons.utils": [[92, "module-autoplex.data.phonons.utils"]], "type_checking (in module autoplex.data.phonons.utils)": [[93, "autoplex.data.phonons.utils.TYPE_CHECKING"]], "check_supercells() (in module autoplex.data.phonons.utils)": [[94, "autoplex.data.phonons.utils.check_supercells"]], "ml_phonon_maker_preparation() (in module autoplex.data.phonons.utils)": [[95, "autoplex.data.phonons.utils.ml_phonon_maker_preparation"]], "reduce_supercell_size() (in module autoplex.data.phonons.utils)": [[96, "autoplex.data.phonons.utils.reduce_supercell_size"]], "update_phonon_displacement_maker() (in module autoplex.data.phonons.utils)": [[97, "autoplex.data.phonons.utils.update_phonon_displacement_maker"]], "autoplex.data.rss": [[98, "module-autoplex.data.rss"]], "autoplex.data.rss.flows": [[99, "module-autoplex.data.rss.flows"]], "do_rss_iterations() (in module autoplex.data.rss.flows)": [[100, "autoplex.data.rss.flows.do_rss_iterations"]], "initial_rss() (in module autoplex.data.rss.flows)": [[101, "autoplex.data.rss.flows.initial_rss"]], "autoplex.data.rss.jobs": [[102, "module-autoplex.data.rss.jobs"]], "randomizedstructure (class in autoplex.data.rss.jobs)": [[103, "autoplex.data.rss.jobs.RandomizedStructure"]], "make() (autoplex.data.rss.jobs.randomizedstructure method)": [[103, "autoplex.data.rss.jobs.RandomizedStructure.make"]], "type_checking (in module autoplex.data.rss.jobs)": [[104, "autoplex.data.rss.jobs.TYPE_CHECKING"]], "atomic_numbers (in module autoplex.data.rss.jobs)": [[105, "autoplex.data.rss.jobs.atomic_numbers"]], "covalent_radii (in module autoplex.data.rss.jobs)": [[106, "autoplex.data.rss.jobs.covalent_radii"]], "do_rss() (in module autoplex.data.rss.jobs)": [[107, "autoplex.data.rss.jobs.do_rss"]], "autoplex.data.rss.utils": [[108, "module-autoplex.data.rss.utils"]], "gpa (in module autoplex.data.rss.utils)": [[109, "autoplex.data.rss.utils.GPa"]], "hookeanrepulsion (class in autoplex.data.rss.utils)": [[110, "autoplex.data.rss.utils.HookeanRepulsion"]], "adjust_forces() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.adjust_forces"]], "adjust_momenta() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.adjust_momenta"]], "adjust_positions() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.adjust_positions"]], "adjust_potential_energy() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.adjust_potential_energy"]], "get_indices() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.get_indices"]], "get_removed_dof() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.get_removed_dof"]], "index_shuffle() (autoplex.data.rss.utils.hookeanrepulsion method)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.index_shuffle"]], "todict (autoplex.data.rss.utils.hookeanrepulsion property)": [[110, "autoplex.data.rss.utils.HookeanRepulsion.todict"]], "atomic_numbers (in module autoplex.data.rss.utils)": [[111, "autoplex.data.rss.utils.atomic_numbers"]], "chemical_symbols (in module autoplex.data.rss.utils)": [[112, "autoplex.data.rss.utils.chemical_symbols"]], "extract_pairstyle() (in module autoplex.data.rss.utils)": [[113, "autoplex.data.rss.utils.extract_pairstyle"]], "minimize_structures() (in module autoplex.data.rss.utils)": [[114, "autoplex.data.rss.utils.minimize_structures"]], "calculate() (autoplex.data.rss.utils.mypotential method)": [[115, "autoplex.data.rss.utils.myPotential.calculate"]], "mypotential (class in autoplex.data.rss.utils)": [[115, "autoplex.data.rss.utils.myPotential"]], "process_rss() (in module autoplex.data.rss.utils)": [[116, "autoplex.data.rss.utils.process_rss"]], "autoplex.fitting": [[117, "module-autoplex.fitting"]], "autoplex.fitting.common": [[118, "module-autoplex.fitting.common"]], "autoplex.fitting.common.flows": [[119, "module-autoplex.fitting.common.flows"]], "datapreprocessing (class in autoplex.fitting.common.flows)": [[120, "autoplex.fitting.common.flows.DataPreprocessing"]], "make() (autoplex.fitting.common.flows.datapreprocessing method)": [[120, "autoplex.fitting.common.flows.DataPreprocessing.make"]], "mlipfitmaker (class in autoplex.fitting.common.flows)": [[121, "autoplex.fitting.common.flows.MLIPFitMaker"]], "make() (autoplex.fitting.common.flows.mlipfitmaker method)": [[121, "autoplex.fitting.common.flows.MLIPFitMaker.make"]], "autoplex.fitting.common.jobs": [[122, "module-autoplex.fitting.common.jobs"]], "machine_learning_fit() (in module autoplex.fitting.common.jobs)": [[123, "autoplex.fitting.common.jobs.machine_learning_fit"]], "autoplex.fitting.common.regularization": [[124, "module-autoplex.fitting.common.regularization"]], "type_checking (in module autoplex.fitting.common.regularization)": [[125, "autoplex.fitting.common.regularization.TYPE_CHECKING"]], "calculate_hull_3d() (in module autoplex.fitting.common.regularization)": [[126, "autoplex.fitting.common.regularization.calculate_hull_3D"]], "calculate_hull_nd() (in module autoplex.fitting.common.regularization)": [[127, "autoplex.fitting.common.regularization.calculate_hull_ND"]], "get_convex_hull() (in module autoplex.fitting.common.regularization)": [[128, "autoplex.fitting.common.regularization.get_convex_hull"]], "get_e_distance_to_hull() (in module autoplex.fitting.common.regularization)": [[129, "autoplex.fitting.common.regularization.get_e_distance_to_hull"]], "get_e_distance_to_hull_3d() (in module autoplex.fitting.common.regularization)": [[130, "autoplex.fitting.common.regularization.get_e_distance_to_hull_3D"]], "get_intersect() (in module autoplex.fitting.common.regularization)": [[131, "autoplex.fitting.common.regularization.get_intersect"]], "get_mole_frac() (in module autoplex.fitting.common.regularization)": [[132, "autoplex.fitting.common.regularization.get_mole_frac"]], "label_stoichiometry_volume() (in module autoplex.fitting.common.regularization)": [[133, "autoplex.fitting.common.regularization.label_stoichiometry_volume"]], "piecewise_linear() (in module autoplex.fitting.common.regularization)": [[134, "autoplex.fitting.common.regularization.piecewise_linear"]], "point_in_triangle_2d() (in module autoplex.fitting.common.regularization)": [[135, "autoplex.fitting.common.regularization.point_in_triangle_2D"]], "point_in_triangle_nd() (in module autoplex.fitting.common.regularization)": [[136, "autoplex.fitting.common.regularization.point_in_triangle_ND"]], "set_sigma() (in module autoplex.fitting.common.regularization)": [[137, "autoplex.fitting.common.regularization.set_sigma"]], "autoplex.fitting.common.utils": [[138, "module-autoplex.fitting.common.utils"]], "type_checking (in module autoplex.fitting.common.utils)": [[139, "autoplex.fitting.common.utils.TYPE_CHECKING"]], "calculate_delta() (in module autoplex.fitting.common.utils)": [[140, "autoplex.fitting.common.utils.calculate_delta"]], "check_convergence() (in module autoplex.fitting.common.utils)": [[141, "autoplex.fitting.common.utils.check_convergence"]], "chemical_symbols (in module autoplex.fitting.common.utils)": [[142, "autoplex.fitting.common.utils.chemical_symbols"]], "compute_pairs_triplets() (in module autoplex.fitting.common.utils)": [[143, "autoplex.fitting.common.utils.compute_pairs_triplets"]], "convert_xyz_to_structure() (in module autoplex.fitting.common.utils)": [[144, "autoplex.fitting.common.utils.convert_xyz_to_structure"]], "energy_remain() (in module autoplex.fitting.common.utils)": [[145, "autoplex.fitting.common.utils.energy_remain"]], "extract_gap_label() (in module autoplex.fitting.common.utils)": [[146, "autoplex.fitting.common.utils.extract_gap_label"]], "flatten() (in module autoplex.fitting.common.utils)": [[147, "autoplex.fitting.common.utils.flatten"]], "gap_fitting() (in module autoplex.fitting.common.utils)": [[148, "autoplex.fitting.common.utils.gap_fitting"]], "gap_hyperparameter_constructor() (in module autoplex.fitting.common.utils)": [[149, "autoplex.fitting.common.utils.gap_hyperparameter_constructor"]], "gcm3_to_vm() (in module autoplex.fitting.common.utils)": [[150, "autoplex.fitting.common.utils.gcm3_to_Vm"]], "get_atomic_numbers() (in module autoplex.fitting.common.utils)": [[151, "autoplex.fitting.common.utils.get_atomic_numbers"]], "get_list_of_vasp_calc_dirs() (in module autoplex.fitting.common.utils)": [[152, "autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs"]], "jace_fitting() (in module autoplex.fitting.common.utils)": [[153, "autoplex.fitting.common.utils.jace_fitting"]], "load_mlip_hyperparameter_defaults() (in module autoplex.fitting.common.utils)": [[154, "autoplex.fitting.common.utils.load_mlip_hyperparameter_defaults"]], "m3gnet_fitting() (in module autoplex.fitting.common.utils)": [[155, "autoplex.fitting.common.utils.m3gnet_fitting"]], "mace_fitting() (in module autoplex.fitting.common.utils)": [[156, "autoplex.fitting.common.utils.mace_fitting"]], "mace_virial_format_conversion() (in module autoplex.fitting.common.utils)": [[157, "autoplex.fitting.common.utils.mace_virial_format_conversion"]], "nequip_fitting() (in module autoplex.fitting.common.utils)": [[158, "autoplex.fitting.common.utils.nequip_fitting"]], "plot_convex_hull() (in module autoplex.fitting.common.utils)": [[159, "autoplex.fitting.common.utils.plot_convex_hull"]], "prepare_fit_environment() (in module autoplex.fitting.common.utils)": [[160, "autoplex.fitting.common.utils.prepare_fit_environment"]], "run_ace() (in module autoplex.fitting.common.utils)": [[161, "autoplex.fitting.common.utils.run_ace"]], "run_gap() (in module autoplex.fitting.common.utils)": [[162, "autoplex.fitting.common.utils.run_gap"]], "run_mace() (in module autoplex.fitting.common.utils)": [[163, "autoplex.fitting.common.utils.run_mace"]], "run_nequip() (in module autoplex.fitting.common.utils)": [[164, "autoplex.fitting.common.utils.run_nequip"]], "run_quip() (in module autoplex.fitting.common.utils)": [[165, "autoplex.fitting.common.utils.run_quip"]], "vaspoutput_2_extended_xyz() (in module autoplex.fitting.common.utils)": [[166, "autoplex.fitting.common.utils.vaspoutput_2_extended_xyz"]], "write_after_distillation_data_split() (in module autoplex.fitting.common.utils)": [[167, "autoplex.fitting.common.utils.write_after_distillation_data_split"]], "autoplex.fitting.phonons": [[168, "module-autoplex.fitting.phonons"]], "autoplex.fitting.phonons.flows": [[169, "module-autoplex.fitting.phonons.flows"]], "autoplex.fitting.phonons.jobs": [[170, "module-autoplex.fitting.phonons.jobs"]], "autoplex.fitting.rss": [[171, "module-autoplex.fitting.rss"]], "autoplex.fitting.rss.flows": [[172, "module-autoplex.fitting.rss.flows"]], "autoplex.fitting.rss.jobs": [[173, "module-autoplex.fitting.rss.jobs"]]}})